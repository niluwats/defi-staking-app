{"ast":null,"code":"import _defineProperty from \"D:\\\\truff\\\\defi-staking-app-starter\\\\defi-staking-app-starter\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/defineProperty\";\nimport _asyncToGenerator from \"D:\\\\truff\\\\defi-staking-app-starter\\\\defi-staking-app-starter\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/asyncToGenerator\";\nimport _regeneratorRuntime from \"D:\\\\truff\\\\defi-staking-app-starter\\\\defi-staking-app-starter\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/regenerator\";\nimport _classCallCheck from \"D:\\\\truff\\\\defi-staking-app-starter\\\\defi-staking-app-starter\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"D:\\\\truff\\\\defi-staking-app-starter\\\\defi-staking-app-starter\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/createClass\";\nimport _possibleConstructorReturn from \"D:\\\\truff\\\\defi-staking-app-starter\\\\defi-staking-app-starter\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/possibleConstructorReturn\";\nimport _getPrototypeOf from \"D:\\\\truff\\\\defi-staking-app-starter\\\\defi-staking-app-starter\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/getPrototypeOf\";\nimport _inherits from \"D:\\\\truff\\\\defi-staking-app-starter\\\\defi-staking-app-starter\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/inherits\";\nimport { NextArbitrary } from '../../check/arbitrary/definition/NextArbitrary.js';\nimport { NextValue } from '../../check/arbitrary/definition/NextValue.js';\nimport { cloneMethod } from '../../check/symbols.js';\nimport { Stream } from '../../stream/Stream.js';\nimport { asyncStringify, asyncToStringMethod, stringify, toStringMethod } from '../../utils/stringify.js';\n\nfunction prettyPrint(seenValuesStrings) {\n  return \"Stream(\".concat(seenValuesStrings.join(','), \"\\u2026)\");\n}\n\nexport var StreamArbitrary = /*#__PURE__*/function (_NextArbitrary) {\n  _inherits(StreamArbitrary, _NextArbitrary);\n\n  function StreamArbitrary(arb) {\n    var _this;\n\n    _classCallCheck(this, StreamArbitrary);\n\n    _this = _possibleConstructorReturn(this, _getPrototypeOf(StreamArbitrary).call(this));\n    _this.arb = arb;\n    return _this;\n  }\n\n  _createClass(StreamArbitrary, [{\n    key: \"generate\",\n    value: function generate(mrng, biasFactor) {\n      var _this2 = this;\n\n      var appliedBiasFactor = biasFactor !== undefined && mrng.nextInt(1, biasFactor) === 1 ? biasFactor : undefined;\n\n      var enrichedProducer = function enrichedProducer() {\n        var _Object$definePropert;\n\n        var seenValues = [];\n\n        var g = /*#__PURE__*/_regeneratorRuntime.mark(function g(arb, clonedMrng) {\n          var value;\n          return _regeneratorRuntime.wrap(function g$(_context2) {\n            while (1) {\n              switch (_context2.prev = _context2.next) {\n                case 0:\n                  if (!true) {\n                    _context2.next = 7;\n                    break;\n                  }\n\n                  value = arb.generate(clonedMrng, appliedBiasFactor).value;\n                  seenValues.push(value);\n                  _context2.next = 5;\n                  return value;\n\n                case 5:\n                  _context2.next = 0;\n                  break;\n\n                case 7:\n                case \"end\":\n                  return _context2.stop();\n              }\n            }\n          }, g);\n        });\n\n        var s = new Stream(g(_this2.arb, mrng.clone()));\n        return Object.defineProperties(s, (_Object$definePropert = {\n          toString: {\n            value: function value() {\n              return prettyPrint(seenValues.map(stringify));\n            }\n          }\n        }, _defineProperty(_Object$definePropert, toStringMethod, {\n          value: function value() {\n            return prettyPrint(seenValues.map(stringify));\n          }\n        }), _defineProperty(_Object$definePropert, asyncToStringMethod, {\n          value: function () {\n            var _value2 = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime.mark(function _callee() {\n              return _regeneratorRuntime.wrap(function _callee$(_context3) {\n                while (1) {\n                  switch (_context3.prev = _context3.next) {\n                    case 0:\n                      _context3.t0 = prettyPrint;\n                      _context3.next = 3;\n                      return Promise.all(seenValues.map(asyncStringify));\n\n                    case 3:\n                      _context3.t1 = _context3.sent;\n                      return _context3.abrupt(\"return\", (0, _context3.t0)(_context3.t1));\n\n                    case 5:\n                    case \"end\":\n                      return _context3.stop();\n                  }\n                }\n              }, _callee);\n            }));\n\n            function value() {\n              return _value2.apply(this, arguments);\n            }\n\n            return value;\n          }()\n        }), _defineProperty(_Object$definePropert, cloneMethod, {\n          value: enrichedProducer,\n          enumerable: true\n        }), _Object$definePropert));\n      };\n\n      return new NextValue(enrichedProducer(), undefined);\n    }\n  }, {\n    key: \"canShrinkWithoutContext\",\n    value: function canShrinkWithoutContext(value) {\n      return false;\n    }\n  }, {\n    key: \"shrink\",\n    value: function shrink(_value, _context) {\n      return Stream.nil();\n    }\n  }]);\n\n  return StreamArbitrary;\n}(NextArbitrary);","map":null,"metadata":{},"sourceType":"module"}