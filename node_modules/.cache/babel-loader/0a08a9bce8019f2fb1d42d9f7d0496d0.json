{"ast":null,"code":"import _regeneratorRuntime from \"D:\\\\truff\\\\defi-staking-app-starter\\\\defi-staking-app-starter\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/regenerator\";\nimport _asyncToGenerator from \"D:\\\\truff\\\\defi-staking-app-starter\\\\defi-staking-app-starter\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/asyncToGenerator\";\nimport _classCallCheck from \"D:\\\\truff\\\\defi-staking-app-starter\\\\defi-staking-app-starter\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/classCallCheck\";\nimport _possibleConstructorReturn from \"D:\\\\truff\\\\defi-staking-app-starter\\\\defi-staking-app-starter\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/possibleConstructorReturn\";\nimport _getPrototypeOf from \"D:\\\\truff\\\\defi-staking-app-starter\\\\defi-staking-app-starter\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/getPrototypeOf\";\nimport _createClass from \"D:\\\\truff\\\\defi-staking-app-starter\\\\defi-staking-app-starter\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/createClass\";\nimport _inherits from \"D:\\\\truff\\\\defi-staking-app-starter\\\\defi-staking-app-starter\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/inherits\";\nvar _jsxFileName = \"D:\\\\truff\\\\defi-staking-app-starter\\\\defi-staking-app-starter\\\\src\\\\components\\\\App.js\";\nimport React, { Component } from \"react\";\nimport \"./App.css\";\nimport \"./Navbar\";\nimport Navbar from \"./Navbar\";\nimport Web3 from \"web3\";\nimport Tether from \"../truffle_abis/Tether.json\";\nimport RWD from \"../truffle_abis/RWD.json\";\nimport DecentralBank from \"../truffle_abis/DecentralBank.json\";\nimport Main from \"./Main\";\nimport ParticleSettings from \"./ParticleSettings\"; // import detectEthereumProvider from \"@metamask/detect-provider\";\n// import loadContract from \"../scripts/issue-tokens.js\";\n\nvar App = /*#__PURE__*/function (_Component) {\n  _inherits(App, _Component);\n\n  _createClass(App, [{\n    key: \"UNSAFE_componentWillMount\",\n    value: function () {\n      var _UNSAFE_componentWillMount = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime.mark(function _callee() {\n        return _regeneratorRuntime.wrap(function _callee$(_context) {\n          while (1) {\n            switch (_context.prev = _context.next) {\n              case 0:\n                _context.next = 2;\n                return this.loadWeb3();\n\n              case 2:\n                _context.next = 4;\n                return this.loadBlockchainData();\n\n              case 4:\n              case \"end\":\n                return _context.stop();\n            }\n          }\n        }, _callee, this);\n      }));\n\n      function UNSAFE_componentWillMount() {\n        return _UNSAFE_componentWillMount.apply(this, arguments);\n      }\n\n      return UNSAFE_componentWillMount;\n    }()\n  }, {\n    key: \"loadWeb3\",\n    value: function () {\n      var _loadWeb = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime.mark(function _callee2() {\n        return _regeneratorRuntime.wrap(function _callee2$(_context2) {\n          while (1) {\n            switch (_context2.prev = _context2.next) {\n              case 0:\n                if (!window.ethereum) {\n                  _context2.next = 6;\n                  break;\n                }\n\n                window.web3 = new Web3(window.ethereum);\n                _context2.next = 4;\n                return window.ethereum.enable();\n\n              case 4:\n                _context2.next = 7;\n                break;\n\n              case 6:\n                if (window.web3) {\n                  window.web3 = new Web3(window.web3.currentProvider);\n                } else {\n                  window.alert(\"No ethereum browser detected! checkout metamask\");\n                }\n\n              case 7:\n              case \"end\":\n                return _context2.stop();\n            }\n          }\n        }, _callee2);\n      }));\n\n      function loadWeb3() {\n        return _loadWeb.apply(this, arguments);\n      }\n\n      return loadWeb3;\n    }()\n  }, {\n    key: \"loadBlockchainData\",\n    value: function () {\n      var _loadBlockchainData = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime.mark(function _callee3() {\n        var web3, accounts, networkId, tetherData, tether, tetherBalance, rwdData, rwd, rwdBalance, deBankData, decentralBank, stakingBalance;\n        return _regeneratorRuntime.wrap(function _callee3$(_context3) {\n          while (1) {\n            switch (_context3.prev = _context3.next) {\n              case 0:\n                web3 = window.web3;\n                _context3.next = 3;\n                return web3.eth.getAccounts();\n\n              case 3:\n                accounts = _context3.sent;\n                console.log(accounts);\n                this.setState({\n                  account: accounts[0]\n                });\n                _context3.next = 8;\n                return web3.eth.net.getId();\n\n              case 8:\n                networkId = _context3.sent;\n                //load tether contract\n                tetherData = Tether.networks[networkId]; // console.log(\"tether address - \", tetherData.address);\n\n                if (!tetherData) {\n                  _context3.next = 24;\n                  break;\n                }\n\n                tether = new web3.eth.Contract(Tether.abi, tetherData.address);\n                this.setState({\n                  tether: tether\n                });\n                _context3.t0 = console;\n                _context3.next = 16;\n                return tether.methods.balanceOf(this.state.account).call();\n\n              case 16:\n                _context3.t1 = _context3.sent;\n\n                _context3.t0.log.call(_context3.t0, _context3.t1);\n\n                _context3.next = 20;\n                return tether.methods.balanceOf(this.state.account).call();\n\n              case 20:\n                tetherBalance = _context3.sent;\n                this.setState({\n                  tetherBalance: tetherBalance.toString()\n                });\n                _context3.next = 25;\n                break;\n\n              case 24:\n                window.alert(\"Error! tether contract not deployed - no detected network\");\n\n              case 25:\n                rwdData = RWD.networks[networkId];\n\n                if (!rwdData) {\n                  _context3.next = 35;\n                  break;\n                }\n\n                rwd = new web3.eth.Contract(RWD.abi, rwdData.address);\n                this.setState({\n                  rwd: rwd\n                });\n                _context3.next = 31;\n                return rwd.methods.balanceOf(this.state.account).call();\n\n              case 31:\n                rwdBalance = _context3.sent;\n                this.setState({\n                  rwdBalance: rwdBalance.toString()\n                });\n                _context3.next = 36;\n                break;\n\n              case 35:\n                window.alert(\"Error! rwd contract not deployed - no detected network\");\n\n              case 36:\n                deBankData = DecentralBank.networks[networkId];\n\n                if (!deBankData) {\n                  _context3.next = 46;\n                  break;\n                }\n\n                decentralBank = new web3.eth.Contract(DecentralBank.abi, deBankData.address);\n                this.setState({\n                  decentralBank: decentralBank\n                });\n                _context3.next = 42;\n                return decentralBank.methods.stakingBalance(this.state.account).call();\n\n              case 42:\n                stakingBalance = _context3.sent;\n                this.setState({\n                  stakingBalance: stakingBalance.toString()\n                });\n                _context3.next = 47;\n                break;\n\n              case 46:\n                window.alert(\"Error! Decentral Bank contract not deployed - no detected network\");\n\n              case 47:\n                this.setState({\n                  loading: false\n                });\n\n              case 48:\n              case \"end\":\n                return _context3.stop();\n            }\n          }\n        }, _callee3, this);\n      }));\n\n      function loadBlockchainData() {\n        return _loadBlockchainData.apply(this, arguments);\n      }\n\n      return loadBlockchainData;\n    }() //staking function\n\n  }]);\n\n  function App(props) {\n    var _this;\n\n    _classCallCheck(this, App);\n\n    _this = _possibleConstructorReturn(this, _getPrototypeOf(App).call(this, props));\n\n    _this.stakeTokens = function (amount) {\n      _this.setState({\n        loading: true\n      });\n\n      _this.state.tether.methods.approve(_this.state.decentralBank._address, amount).send({\n        from: _this.state.account\n      }).on(\"transactionHash\", function (hash) {\n        _this.setState({\n          loading: false\n        });\n      });\n\n      _this.state.decentralBank.methods.depositTokens(amount).send({\n        from: _this.state.account\n      }).on(\"transactionHash\", function (hash) {\n        _this.setState({\n          loading: false\n        });\n      });\n    };\n\n    _this.unstakeTokens = function () {\n      _this.setState({\n        loading: true\n      });\n\n      _this.state.decentralBank.methods.unstake().send({\n        from: _this.state.account\n      }).on(\"transactionHash\", function (hash) {\n        _this.setState({\n          loading: false\n        });\n      });\n    };\n\n    _this.issueTokens = function () {\n      _this.setState({\n        loading: true\n      });\n\n      console.log(\"reached\");\n      console.log(_this.state.decentralBank.methods.owner);\n\n      _this.state.decentralBank.methods.issueTokens().send({\n        from: _this.state.decentralBank.methods.owner()\n      }).on(\"transactionHash\", function (hash) {\n        _this.setState({\n          loading: false\n        });\n      });\n    };\n\n    _this.state = {\n      account: \"0x0W3WRH34J4J2NFF\",\n      tether: {},\n      rwd: {},\n      decentralBank: {},\n      tetherBalance: \"0\",\n      rwdBalance: \"0\",\n      stakingBalance: \"0\",\n      loading: true\n    };\n    return _this;\n  }\n\n  _createClass(App, [{\n    key: \"render\",\n    value: function render() {\n      var content;\n      {\n        this.state.loading ? content = /*#__PURE__*/React.createElement(\"p\", {\n          id: \"loader\",\n          className: \"text-center\",\n          style: {\n            margin: \"30px\",\n            color: \"white\"\n          },\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 146,\n            columnNumber: 13\n          }\n        }, \"LOADING PLEASE...\") : content = /*#__PURE__*/React.createElement(Main, {\n          tetherBalance: this.state.tetherBalance,\n          rwdBalance: this.state.rwdBalance,\n          stakingBalance: this.state.stakingBalance,\n          stakeTokens: this.stakeTokens,\n          unstakeTokens: this.unstakeTokens,\n          issueTokens: this.issueTokens,\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 155,\n            columnNumber: 13\n          }\n        });\n      }\n      return /*#__PURE__*/React.createElement(\"div\", {\n        className: \"App\",\n        style: {\n          position: \"relative\"\n        },\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 166,\n          columnNumber: 7\n        }\n      }, /*#__PURE__*/React.createElement(\"div\", {\n        style: {\n          position: \"absolute\"\n        },\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 167,\n          columnNumber: 9\n        }\n      }, /*#__PURE__*/React.createElement(ParticleSettings, {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 168,\n          columnNumber: 11\n        }\n      })), /*#__PURE__*/React.createElement(Navbar, {\n        account: this.state.account,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 170,\n          columnNumber: 9\n        }\n      }), /*#__PURE__*/React.createElement(\"div\", {\n        className: \"container-fluid mt-5\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 171,\n          columnNumber: 9\n        }\n      }, /*#__PURE__*/React.createElement(\"div\", {\n        className: \"row\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 172,\n          columnNumber: 11\n        }\n      }, /*#__PURE__*/React.createElement(\"main\", {\n        role: \"main\",\n        className: \"col-lg-12 ml-auto mr-auto\",\n        style: {\n          maxWidth: \"600px\",\n          minHeight: \"100vm\"\n        },\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 173,\n          columnNumber: 13\n        }\n      }, /*#__PURE__*/React.createElement(\"div\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 178,\n          columnNumber: 15\n        }\n      }, content)))));\n    }\n  }]);\n\n  return App;\n}(Component);\n\nexport default App;","map":{"version":3,"sources":["D:/truff/defi-staking-app-starter/defi-staking-app-starter/src/components/App.js"],"names":["React","Component","Navbar","Web3","Tether","RWD","DecentralBank","Main","ParticleSettings","App","loadWeb3","loadBlockchainData","window","ethereum","web3","enable","currentProvider","alert","eth","getAccounts","accounts","console","log","setState","account","net","getId","networkId","tetherData","networks","tether","Contract","abi","address","methods","balanceOf","state","call","tetherBalance","toString","rwdData","rwd","rwdBalance","deBankData","decentralBank","stakingBalance","loading","props","stakeTokens","amount","approve","_address","send","from","on","hash","depositTokens","unstakeTokens","unstake","issueTokens","owner","content","margin","color","position","maxWidth","minHeight"],"mappings":"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","sourcesContent":["import React, { Component } from \"react\";\r\nimport \"./App.css\";\r\nimport \"./Navbar\";\r\nimport Navbar from \"./Navbar\";\r\nimport Web3 from \"web3\";\r\nimport Tether from \"../truffle_abis/Tether.json\";\r\nimport RWD from \"../truffle_abis/RWD.json\";\r\nimport DecentralBank from \"../truffle_abis/DecentralBank.json\";\r\nimport Main from \"./Main\";\r\nimport ParticleSettings from \"./ParticleSettings\";\r\n// import detectEthereumProvider from \"@metamask/detect-provider\";\r\n// import loadContract from \"../scripts/issue-tokens.js\";\r\n\r\nclass App extends Component {\r\n  async UNSAFE_componentWillMount() {\r\n    await this.loadWeb3();\r\n    await this.loadBlockchainData();\r\n  }\r\n\r\n  async loadWeb3() {\r\n    if (window.ethereum) {\r\n      window.web3 = new Web3(window.ethereum);\r\n      await window.ethereum.enable();\r\n    } else if (window.web3) {\r\n      window.web3 = new Web3(window.web3.currentProvider);\r\n    } else {\r\n      window.alert(\"No ethereum browser detected! checkout metamask\");\r\n    }\r\n  }\r\n\r\n  async loadBlockchainData() {\r\n    const web3 = window.web3;\r\n    const accounts = await web3.eth.getAccounts();\r\n    console.log(accounts);\r\n    this.setState({ account: accounts[0] });\r\n    const networkId = await web3.eth.net.getId();\r\n    //load tether contract\r\n\r\n    const tetherData = Tether.networks[networkId];\r\n    // console.log(\"tether address - \", tetherData.address);\r\n    if (tetherData) {\r\n      const tether = new web3.eth.Contract(Tether.abi, tetherData.address);\r\n      this.setState({ tether });\r\n\r\n      console.log(await tether.methods.balanceOf(this.state.account).call());\r\n      let tetherBalance = await tether.methods\r\n        .balanceOf(this.state.account)\r\n        .call();\r\n      this.setState({ tetherBalance: tetherBalance.toString() });\r\n    } else {\r\n      window.alert(\"Error! tether contract not deployed - no detected network\");\r\n    }\r\n\r\n    const rwdData = RWD.networks[networkId];\r\n    if (rwdData) {\r\n      const rwd = new web3.eth.Contract(RWD.abi, rwdData.address);\r\n      this.setState({ rwd });\r\n\r\n      let rwdBalance = await rwd.methods.balanceOf(this.state.account).call();\r\n      this.setState({ rwdBalance: rwdBalance.toString() });\r\n    } else {\r\n      window.alert(\"Error! rwd contract not deployed - no detected network\");\r\n    }\r\n\r\n    const deBankData = DecentralBank.networks[networkId];\r\n    if (deBankData) {\r\n      const decentralBank = new web3.eth.Contract(\r\n        DecentralBank.abi,\r\n        deBankData.address\r\n      );\r\n      this.setState({ decentralBank });\r\n\r\n      let stakingBalance = await decentralBank.methods\r\n        .stakingBalance(this.state.account)\r\n        .call();\r\n      this.setState({ stakingBalance: stakingBalance.toString() });\r\n    } else {\r\n      window.alert(\r\n        \"Error! Decentral Bank contract not deployed - no detected network\"\r\n      );\r\n    }\r\n    this.setState({ loading: false });\r\n  }\r\n\r\n  //staking function\r\n  stakeTokens = (amount) => {\r\n    this.setState({ loading: true });\r\n    this.state.tether.methods\r\n      .approve(this.state.decentralBank._address, amount)\r\n      .send({ from: this.state.account })\r\n      .on(\"transactionHash\", (hash) => {\r\n        this.setState({ loading: false });\r\n      });\r\n    this.state.decentralBank.methods\r\n      .depositTokens(amount)\r\n      .send({ from: this.state.account })\r\n      .on(\"transactionHash\", (hash) => {\r\n        this.setState({ loading: false });\r\n      });\r\n  };\r\n\r\n  // unstaking function\r\n  unstakeTokens = () => {\r\n    this.setState({ loading: true });\r\n    this.state.decentralBank.methods\r\n      .unstake()\r\n      .send({ from: this.state.account })\r\n      .on(\"transactionHash\", (hash) => {\r\n        this.setState({ loading: false });\r\n      });\r\n  };\r\n\r\n  issueTokens = () => {\r\n    this.setState({ loading: true });\r\n    console.log(\"reached\");\r\n    console.log(this.state.decentralBank.methods.owner);\r\n    this.state.decentralBank.methods\r\n      .issueTokens()\r\n      .send({\r\n        from: this.state.decentralBank.methods.owner(),\r\n      })\r\n      .on(\"transactionHash\", (hash) => {\r\n        this.setState({ loading: false });\r\n      });\r\n  };\r\n\r\n  constructor(props) {\r\n    super(props);\r\n    this.state = {\r\n      account: \"0x0W3WRH34J4J2NFF\",\r\n      tether: {},\r\n      rwd: {},\r\n      decentralBank: {},\r\n      tetherBalance: \"0\",\r\n      rwdBalance: \"0\",\r\n      stakingBalance: \"0\",\r\n      loading: true,\r\n    };\r\n  }\r\n\r\n  render() {\r\n    let content;\r\n    {\r\n      this.state.loading\r\n        ? (content = (\r\n            <p\r\n              id=\"loader\"\r\n              className=\"text-center\"\r\n              style={{ margin: \"30px\", color: \"white\" }}\r\n            >\r\n              LOADING PLEASE...\r\n            </p>\r\n          ))\r\n        : (content = (\r\n            <Main\r\n              tetherBalance={this.state.tetherBalance}\r\n              rwdBalance={this.state.rwdBalance}\r\n              stakingBalance={this.state.stakingBalance}\r\n              stakeTokens={this.stakeTokens}\r\n              unstakeTokens={this.unstakeTokens}\r\n              issueTokens={this.issueTokens}\r\n            />\r\n          ));\r\n    }\r\n    return (\r\n      <div className=\"App\" style={{ position: \"relative\" }}>\r\n        <div style={{ position: \"absolute\" }}>\r\n          <ParticleSettings />\r\n        </div>\r\n        <Navbar account={this.state.account} />\r\n        <div className=\"container-fluid mt-5\">\r\n          <div className=\"row\">\r\n            <main\r\n              role=\"main\"\r\n              className=\"col-lg-12 ml-auto mr-auto\"\r\n              style={{ maxWidth: \"600px\", minHeight: \"100vm\" }}\r\n            >\r\n              <div>{content}</div>\r\n            </main>\r\n          </div>\r\n        </div>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nexport default App;\r\n"]},"metadata":{},"sourceType":"module"}