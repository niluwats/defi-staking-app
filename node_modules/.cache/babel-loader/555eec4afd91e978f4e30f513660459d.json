{"ast":null,"code":"import _regeneratorRuntime from \"D:\\\\truff\\\\defi-staking-app-starter\\\\defi-staking-app-starter\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/regenerator\";\nimport _asyncToGenerator from \"D:\\\\truff\\\\defi-staking-app-starter\\\\defi-staking-app-starter\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/asyncToGenerator\";\nimport _classCallCheck from \"D:\\\\truff\\\\defi-staking-app-starter\\\\defi-staking-app-starter\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/classCallCheck\";\nimport _possibleConstructorReturn from \"D:\\\\truff\\\\defi-staking-app-starter\\\\defi-staking-app-starter\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/possibleConstructorReturn\";\nimport _getPrototypeOf from \"D:\\\\truff\\\\defi-staking-app-starter\\\\defi-staking-app-starter\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/getPrototypeOf\";\nimport _createClass from \"D:\\\\truff\\\\defi-staking-app-starter\\\\defi-staking-app-starter\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/createClass\";\nimport _inherits from \"D:\\\\truff\\\\defi-staking-app-starter\\\\defi-staking-app-starter\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/inherits\";\nvar _jsxFileName = \"D:\\\\truff\\\\defi-staking-app-starter\\\\defi-staking-app-starter\\\\src\\\\components\\\\App.js\";\nimport React, { Component } from \"react\";\nimport \"./App.css\";\nimport \"./Navbar\";\nimport Navbar from \"./Navbar\";\nimport Web3 from \"web3\";\nimport Tether from \"../truffle_abis/Tether.json\";\nimport RWD from \"../truffle_abis/RWD.json\";\nimport DecentralBank from \"../truffle_abis/DecentralBank.json\";\n\nvar App = /*#__PURE__*/function (_Component) {\n  _inherits(App, _Component);\n\n  _createClass(App, [{\n    key: \"UNSAFE_componentWillMount\",\n    value: function () {\n      var _UNSAFE_componentWillMount = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime.mark(function _callee() {\n        return _regeneratorRuntime.wrap(function _callee$(_context) {\n          while (1) {\n            switch (_context.prev = _context.next) {\n              case 0:\n                _context.next = 2;\n                return this.loadWeb3();\n\n              case 2:\n                _context.next = 4;\n                return this.loadBlockchainData();\n\n              case 4:\n              case \"end\":\n                return _context.stop();\n            }\n          }\n        }, _callee, this);\n      }));\n\n      function UNSAFE_componentWillMount() {\n        return _UNSAFE_componentWillMount.apply(this, arguments);\n      }\n\n      return UNSAFE_componentWillMount;\n    }()\n  }, {\n    key: \"loadWeb3\",\n    value: function () {\n      var _loadWeb = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime.mark(function _callee2() {\n        return _regeneratorRuntime.wrap(function _callee2$(_context2) {\n          while (1) {\n            switch (_context2.prev = _context2.next) {\n              case 0:\n                if (!window.ethereum) {\n                  _context2.next = 6;\n                  break;\n                }\n\n                window.web3 = new Web3(window.ethereum);\n                _context2.next = 4;\n                return window.ethereum.enable();\n\n              case 4:\n                _context2.next = 7;\n                break;\n\n              case 6:\n                if (window.web3) {\n                  window.web3 = new Web3(window.web3.currentProvider);\n                } else {\n                  window.alert(\"No ethereum browser detected! checkout metamask\");\n                }\n\n              case 7:\n              case \"end\":\n                return _context2.stop();\n            }\n          }\n        }, _callee2);\n      }));\n\n      function loadWeb3() {\n        return _loadWeb.apply(this, arguments);\n      }\n\n      return loadWeb3;\n    }()\n  }, {\n    key: \"loadBlockchainData\",\n    value: function () {\n      var _loadBlockchainData = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime.mark(function _callee3() {\n        var web3, accounts, networkId, tetherData, tether, tetherBalance, rwdData, rwd, _rwdBalance, deBankData, decentralBank, dbBalance;\n\n        return _regeneratorRuntime.wrap(function _callee3$(_context3) {\n          while (1) {\n            switch (_context3.prev = _context3.next) {\n              case 0:\n                web3 = window.web3;\n                _context3.next = 3;\n                return web3.eth.getAccounts();\n\n              case 3:\n                accounts = _context3.sent;\n                console.log(accounts);\n                this.setState({\n                  account: accounts[0]\n                });\n                _context3.next = 8;\n                return web3.eth.net.getId();\n\n              case 8:\n                networkId = _context3.sent;\n                //load tether contract\n                tetherData = Tether.networks[networkId]; // console.log(\"tether address - \", tetherData.address);\n\n                if (!tetherData) {\n                  _context3.next = 20;\n                  break;\n                }\n\n                tether = new web3.eth.Contract(Tether.abi, tetherData.address);\n                this.setState({\n                  tether: tether\n                });\n                _context3.next = 15;\n                return tether.methods.balanceOf(this.state.account);\n\n              case 15:\n                tetherBalance = _context3.sent;\n                this.setState({\n                  tetherBalance: tetherBalance.toString()\n                });\n                console.log({\n                  balance: tetherBalance\n                });\n                _context3.next = 21;\n                break;\n\n              case 20:\n                window.alert(\"Error! tether contract not deployed - no detected network\");\n\n              case 21:\n                rwdData = RWD.networks[networkId];\n\n                if (!rwdData) {\n                  _context3.next = 32;\n                  break;\n                }\n\n                rwd = new web3.eth.Contract(RWD.abi, rwdData.address);\n                this.setState({\n                  rwd: rwd\n                });\n                _context3.next = 27;\n                return rwd.methods.balanceOf(this.state.account);\n\n              case 27:\n                _rwdBalance = _context3.sent;\n                this.setState({\n                  rwdBalance: _rwdBalance.toString()\n                });\n                console.log({\n                  balance: _rwdBalance\n                });\n                _context3.next = 33;\n                break;\n\n              case 32:\n                window.alert(\"Error! rwd contract not deployed - no detected network\");\n\n              case 33:\n                deBankData = DecentralBank.networks[networkId];\n\n                if (!deBank) {\n                  _context3.next = 44;\n                  break;\n                }\n\n                decentralBank = new web3.eth.Contract(DecentralBank.abi, deBankData.address);\n                this.setState({\n                  decentralBank: decentralBank\n                });\n                _context3.next = 39;\n                return decentralBank.methods.stakingBalance(this.state.account);\n\n              case 39:\n                dbBalance = _context3.sent;\n                this.setState({\n                  rwdBalance: rwdBalance.toString()\n                });\n                console.log({\n                  balance: rwdBalance\n                });\n                _context3.next = 45;\n                break;\n\n              case 44:\n                window.alert(\"Error! rwd contract not deployed - no detected network\");\n\n              case 45:\n              case \"end\":\n                return _context3.stop();\n            }\n          }\n        }, _callee3, this);\n      }));\n\n      function loadBlockchainData() {\n        return _loadBlockchainData.apply(this, arguments);\n      }\n\n      return loadBlockchainData;\n    }()\n  }]);\n\n  function App(props) {\n    var _this;\n\n    _classCallCheck(this, App);\n\n    _this = _possibleConstructorReturn(this, _getPrototypeOf(App).call(this, props));\n    _this.state = {\n      account: \"0x0W3WRH34J4J2NFF\",\n      tether: {},\n      rwd: {},\n      decentralBank: {},\n      tetherBalance: \"0\",\n      rwdBalance: \"0\",\n      stakingBalance: \"0\",\n      loading: true\n    };\n    return _this;\n  }\n\n  _createClass(App, [{\n    key: \"render\",\n    value: function render() {\n      return /*#__PURE__*/React.createElement(\"div\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 94,\n          columnNumber: 7\n        }\n      }, /*#__PURE__*/React.createElement(Navbar, {\n        account: this.state.account,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 95,\n          columnNumber: 9\n        }\n      }), /*#__PURE__*/React.createElement(\"div\", {\n        className: \"text-center\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 96,\n          columnNumber: 9\n        }\n      }, /*#__PURE__*/React.createElement(\"h1\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 97,\n          columnNumber: 11\n        }\n      }, \"Hello world\")));\n    }\n  }]);\n\n  return App;\n}(Component);\n\nexport default App;","map":{"version":3,"sources":["D:/truff/defi-staking-app-starter/defi-staking-app-starter/src/components/App.js"],"names":["React","Component","Navbar","Web3","Tether","RWD","DecentralBank","App","loadWeb3","loadBlockchainData","window","ethereum","web3","enable","currentProvider","alert","eth","getAccounts","accounts","console","log","setState","account","net","getId","networkId","tetherData","networks","tether","Contract","abi","address","methods","balanceOf","state","tetherBalance","toString","balance","rwdData","rwd","rwdBalance","deBankData","deBank","decentralBank","stakingBalance","dbBalance","props","loading"],"mappings":"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","sourcesContent":["import React, { Component } from \"react\";\r\nimport \"./App.css\";\r\nimport \"./Navbar\";\r\nimport Navbar from \"./Navbar\";\r\nimport Web3 from \"web3\";\r\nimport Tether from \"../truffle_abis/Tether.json\";\r\nimport RWD from \"../truffle_abis/RWD.json\";\r\nimport DecentralBank from \"../truffle_abis/DecentralBank.json\";\r\n\r\nclass App extends Component {\r\n  async UNSAFE_componentWillMount() {\r\n    await this.loadWeb3();\r\n    await this.loadBlockchainData();\r\n  }\r\n\r\n  async loadWeb3() {\r\n    if (window.ethereum) {\r\n      window.web3 = new Web3(window.ethereum);\r\n      await window.ethereum.enable();\r\n    } else if (window.web3) {\r\n      window.web3 = new Web3(window.web3.currentProvider);\r\n    } else {\r\n      window.alert(\"No ethereum browser detected! checkout metamask\");\r\n    }\r\n  }\r\n\r\n  async loadBlockchainData() {\r\n    const web3 = window.web3;\r\n    const accounts = await web3.eth.getAccounts();\r\n    console.log(accounts);\r\n    this.setState({ account: accounts[0] });\r\n    const networkId = await web3.eth.net.getId();\r\n    //load tether contract\r\n\r\n    const tetherData = Tether.networks[networkId];\r\n    // console.log(\"tether address - \", tetherData.address);\r\n    if (tetherData) {\r\n      const tether = new web3.eth.Contract(Tether.abi, tetherData.address);\r\n      this.setState({ tether });\r\n\r\n      let tetherBalance = await tether.methods.balanceOf(this.state.account);\r\n      this.setState({ tetherBalance: tetherBalance.toString() });\r\n      console.log({ balance: tetherBalance });\r\n    } else {\r\n      window.alert(\"Error! tether contract not deployed - no detected network\");\r\n    }\r\n\r\n    const rwdData = RWD.networks[networkId];\r\n    if (rwdData) {\r\n      const rwd = new web3.eth.Contract(RWD.abi, rwdData.address);\r\n      this.setState({ rwd });\r\n\r\n      let rwdBalance = await rwd.methods.balanceOf(this.state.account);\r\n      this.setState({ rwdBalance: rwdBalance.toString() });\r\n      console.log({ balance: rwdBalance });\r\n    } else {\r\n      window.alert(\"Error! rwd contract not deployed - no detected network\");\r\n    }\r\n\r\n    const deBankData = DecentralBank.networks[networkId];\r\n    if (deBank) {\r\n      const decentralBank = new web3.eth.Contract(\r\n        DecentralBank.abi,\r\n        deBankData.address\r\n      );\r\n      this.setState({ decentralBank });\r\n\r\n      let dbBalance = await decentralBank.methods.stakingBalance(\r\n        this.state.account\r\n      );\r\n      this.setState({ rwdBalance: rwdBalance.toString() });\r\n      console.log({ balance: rwdBalance });\r\n    } else {\r\n      window.alert(\"Error! rwd contract not deployed - no detected network\");\r\n    }\r\n  }\r\n\r\n  constructor(props) {\r\n    super(props);\r\n    this.state = {\r\n      account: \"0x0W3WRH34J4J2NFF\",\r\n      tether: {},\r\n      rwd: {},\r\n      decentralBank: {},\r\n      tetherBalance: \"0\",\r\n      rwdBalance: \"0\",\r\n      stakingBalance: \"0\",\r\n      loading: true,\r\n    };\r\n  }\r\n\r\n  render() {\r\n    return (\r\n      <div>\r\n        <Navbar account={this.state.account} />\r\n        <div className=\"text-center\">\r\n          <h1>Hello world</h1>\r\n        </div>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nexport default App;\r\n"]},"metadata":{},"sourceType":"module"}