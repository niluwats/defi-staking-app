{"ast":null,"code":"\"use strict\";\n\nvar _regeneratorRuntime = require(\"D:\\\\truff\\\\defi-staking-app-starter\\\\defi-staking-app-starter\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/regenerator\");\n\nvar _marked = /*#__PURE__*/_regeneratorRuntime.mark(decode),\n    _marked2 = /*#__PURE__*/_regeneratorRuntime.mark(decodeDispatch);\n\nvar __createBinding = this && this.__createBinding || (Object.create ? function (o, m, k, k2) {\n  if (k2 === undefined) k2 = k;\n  Object.defineProperty(o, k2, {\n    enumerable: true,\n    get: function get() {\n      return m[k];\n    }\n  });\n} : function (o, m, k, k2) {\n  if (k2 === undefined) k2 = k;\n  o[k2] = m[k];\n});\n\nvar __setModuleDefault = this && this.__setModuleDefault || (Object.create ? function (o, v) {\n  Object.defineProperty(o, \"default\", {\n    enumerable: true,\n    value: v\n  });\n} : function (o, v) {\n  o[\"default\"] = v;\n});\n\nvar __importStar = this && this.__importStar || function (mod) {\n  if (mod && mod.__esModule) return mod;\n  var result = {};\n  if (mod != null) for (var k in mod) {\n    if (k !== \"default\" && Object.prototype.hasOwnProperty.call(mod, k)) __createBinding(result, mod, k);\n  }\n\n  __setModuleDefault(result, mod);\n\n  return result;\n};\n\nvar __importDefault = this && this.__importDefault || function (mod) {\n  return mod && mod.__esModule ? mod : {\n    \"default\": mod\n  };\n};\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\n\nvar debug_1 = __importDefault(require(\"debug\"));\n\nvar debug = debug_1.default(\"codec:decode\");\n\nvar AstConstant = __importStar(require(\"./ast-constant\"));\n\nvar AbiData = __importStar(require(\"./abi-data\"));\n\nvar Compiler = __importStar(require(\"./compiler\"));\n\nvar Format = __importStar(require(\"./format\"));\n\nvar Basic = __importStar(require(\"./basic\"));\n\nvar Memory = __importStar(require(\"./memory\"));\n\nvar Special = __importStar(require(\"./special\"));\n\nvar Stack = __importStar(require(\"./stack\"));\n\nvar Storage = __importStar(require(\"./storage\"));\n\nvar Topic = __importStar(require(\"./topic\"));\n\nfunction decode(dataType, pointer, info) {\n  var options,\n      _args = arguments;\n  return _regeneratorRuntime.wrap(function decode$(_context) {\n    while (1) {\n      switch (_context.prev = _context.next) {\n        case 0:\n          options = _args.length > 3 && _args[3] !== undefined ? _args[3] : {};\n          _context.t0 = Format.Utils.Circularity;\n          return _context.delegateYield(decodeDispatch(dataType, pointer, info, options), \"t1\", 3);\n\n        case 3:\n          _context.t2 = _context.t1;\n          return _context.abrupt(\"return\", _context.t0.tie.call(_context.t0, _context.t2));\n\n        case 5:\n        case \"end\":\n          return _context.stop();\n      }\n    }\n  }, _marked);\n}\n\nexports.default = decode;\n\nfunction decodeDispatch(dataType, pointer, info) {\n  var options,\n      _args2 = arguments;\n  return _regeneratorRuntime.wrap(function decodeDispatch$(_context2) {\n    while (1) {\n      switch (_context2.prev = _context2.next) {\n        case 0:\n          options = _args2.length > 3 && _args2[3] !== undefined ? _args2[3] : {};\n          debug(\"type %O\", dataType);\n          debug(\"pointer %O\", pointer);\n          _context2.t0 = pointer.location;\n          _context2.next = _context2.t0 === \"storage\" ? 6 : _context2.t0 === \"stack\" ? 8 : _context2.t0 === \"stackliteral\" ? 10 : _context2.t0 === \"definition\" ? 12 : _context2.t0 === \"special\" ? 14 : _context2.t0 === \"calldata\" ? 16 : _context2.t0 === \"eventdata\" ? 16 : _context2.t0 === \"returndata\" ? 16 : _context2.t0 === \"eventtopic\" ? 18 : _context2.t0 === \"code\" ? 20 : _context2.t0 === \"nowhere\" ? 20 : _context2.t0 === \"memory\" ? 22 : 29;\n          break;\n\n        case 6:\n          return _context2.delegateYield(Storage.Decode.decodeStorage(dataType, pointer, info), \"t1\", 7);\n\n        case 7:\n          return _context2.abrupt(\"return\", _context2.t1);\n\n        case 8:\n          return _context2.delegateYield(Stack.Decode.decodeStack(dataType, pointer, info), \"t2\", 9);\n\n        case 9:\n          return _context2.abrupt(\"return\", _context2.t2);\n\n        case 10:\n          return _context2.delegateYield(Stack.Decode.decodeLiteral(dataType, pointer, info), \"t3\", 11);\n\n        case 11:\n          return _context2.abrupt(\"return\", _context2.t3);\n\n        case 12:\n          return _context2.delegateYield(AstConstant.Decode.decodeConstant(dataType, pointer, info), \"t4\", 13);\n\n        case 13:\n          return _context2.abrupt(\"return\", _context2.t4);\n\n        case 14:\n          return _context2.delegateYield(Special.Decode.decodeSpecial(dataType, pointer, info), \"t5\", 15);\n\n        case 15:\n          return _context2.abrupt(\"return\", _context2.t5);\n\n        case 16:\n          return _context2.delegateYield(AbiData.Decode.decodeAbi(dataType, pointer, info, options), \"t6\", 17);\n\n        case 17:\n          return _context2.abrupt(\"return\", _context2.t6);\n\n        case 18:\n          return _context2.delegateYield(Topic.Decode.decodeTopic(dataType, pointer, info, options), \"t7\", 19);\n\n        case 19:\n          return _context2.abrupt(\"return\", _context2.t7);\n\n        case 20:\n          return _context2.delegateYield(Basic.Decode.decodeBasic(dataType, pointer, info, Object.assign(Object.assign({}, options), {\n            paddingMode: \"defaultOrZero\"\n          })), \"t8\", 21);\n\n        case 21:\n          return _context2.abrupt(\"return\", _context2.t8);\n\n        case 22:\n          _context2.t9 = Compiler.Utils.solidityFamily(info.currentContext.compiler);\n          _context2.next = _context2.t9 === \"0.5.x\" ? 25 : _context2.t9 === \"0.8.x\" ? 25 : _context2.t9 === \"0.8.7+\" ? 25 : 27;\n          break;\n\n        case 25:\n          return _context2.delegateYield(Memory.Decode.decodeMemory(dataType, pointer, info, Object.assign(Object.assign({}, options), {\n            paddingMode: \"right\"\n          })), \"t10\", 26);\n\n        case 26:\n          return _context2.abrupt(\"return\", _context2.t10);\n\n        case 27:\n          return _context2.delegateYield(Memory.Decode.decodeMemory(dataType, pointer, info, options), \"t11\", 28);\n\n        case 28:\n          return _context2.abrupt(\"return\", _context2.t11);\n\n        case 29:\n        case \"end\":\n          return _context2.stop();\n      }\n    }\n  }, _marked2);\n}","map":null,"metadata":{},"sourceType":"script"}