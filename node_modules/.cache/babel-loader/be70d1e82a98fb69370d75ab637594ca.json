{"ast":null,"code":"import { integer } from './integer.js';\nimport { tuple } from './tuple.js';\nimport { doubleNext } from './_next/doubleNext.js';\n\nfunction next(n) {\n  return integer(0, (1 << n) - 1);\n}\n\nvar doubleFactor = Math.pow(2, 27);\nvar doubleDivisor = Math.pow(2, -53);\n\nvar doubleInternal = function doubleInternal() {\n  return tuple(next(26), next(27)).map(function (v) {\n    return (v[0] * doubleFactor + v[1]) * doubleDivisor;\n  });\n};\n\nfunction double() {\n  for (var _len = arguments.length, args = new Array(_len), _key = 0; _key < _len; _key++) {\n    args[_key] = arguments[_key];\n  }\n\n  if (typeof args[0] === 'object') {\n    if (args[0].next) {\n      return doubleNext(args[0]);\n    }\n\n    var min = args[0].min !== undefined ? args[0].min : 0;\n    var max = args[0].max !== undefined ? args[0].max : 1;\n    return doubleInternal().map(function (v) {\n      return min + v * (max - min);\n    }).filter(function (g) {\n      return g !== max || g === min;\n    });\n  } else {\n    var a = args[0];\n    var b = args[1];\n    if (a === undefined) return doubleInternal();\n    if (b === undefined) return doubleInternal().map(function (v) {\n      return v * a;\n    }).filter(function (g) {\n      return g !== a || g === 0;\n    });\n    return doubleInternal().map(function (v) {\n      return a + v * (b - a);\n    }).filter(function (g) {\n      return g !== b || g === a;\n    });\n  }\n}\n\nexport { double };","map":null,"metadata":{},"sourceType":"module"}