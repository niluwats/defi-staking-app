{"ast":null,"code":"import { LazyArbitrary } from './_internals/LazyArbitrary.js';\nimport { convertFromNext, convertToNext } from '../check/arbitrary/definition/Converters.js';\nexport function letrec(builder) {\n  var lazyArbs = Object.create(null);\n\n  var tie = function tie(key) {\n    if (!Object.prototype.hasOwnProperty.call(lazyArbs, key)) {\n      lazyArbs[key] = new LazyArbitrary(String(key));\n    }\n\n    return convertFromNext(lazyArbs[key]);\n  };\n\n  var strictArbs = builder(tie);\n\n  for (var key in strictArbs) {\n    if (!Object.prototype.hasOwnProperty.call(strictArbs, key)) {\n      continue;\n    }\n\n    var lazyAtKey = lazyArbs[key];\n    var lazyArb = lazyAtKey !== undefined ? lazyAtKey : new LazyArbitrary(key);\n    lazyArb.underlying = convertToNext(strictArbs[key]);\n    lazyArbs[key] = lazyArb;\n  }\n\n  return strictArbs;\n}","map":null,"metadata":{},"sourceType":"module"}