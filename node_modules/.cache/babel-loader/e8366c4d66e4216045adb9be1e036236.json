{"ast":null,"code":"import _classCallCheck from \"D:\\\\truff\\\\defi-staking-app-starter\\\\defi-staking-app-starter\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"D:\\\\truff\\\\defi-staking-app-starter\\\\defi-staking-app-starter\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/createClass\";\nimport _possibleConstructorReturn from \"D:\\\\truff\\\\defi-staking-app-starter\\\\defi-staking-app-starter\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/possibleConstructorReturn\";\nimport _getPrototypeOf from \"D:\\\\truff\\\\defi-staking-app-starter\\\\defi-staking-app-starter\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/getPrototypeOf\";\nimport _inherits from \"D:\\\\truff\\\\defi-staking-app-starter\\\\defi-staking-app-starter\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/inherits\";\nimport { Arbitrary } from './Arbitrary.js';\nimport { Shrinkable } from './Shrinkable.js';\n\nfunction removeContextFromContextualValue(contextualValue) {\n  return contextualValue[0];\n}\n\nvar ArbitraryWithContextualShrink = /*#__PURE__*/function (_Arbitrary) {\n  _inherits(ArbitraryWithContextualShrink, _Arbitrary);\n\n  function ArbitraryWithContextualShrink() {\n    _classCallCheck(this, ArbitraryWithContextualShrink);\n\n    return _possibleConstructorReturn(this, _getPrototypeOf(ArbitraryWithContextualShrink).apply(this, arguments));\n  }\n\n  _createClass(ArbitraryWithContextualShrink, [{\n    key: \"contextualShrinkableFor\",\n    value: function contextualShrinkableFor(value, context) {\n      var _this = this;\n\n      return new Shrinkable(value, function () {\n        return _this.contextualShrink(value, context).map(function (contextualValue) {\n          return _this.contextualShrinkableFor(contextualValue[0], contextualValue[1]);\n        });\n      });\n    }\n  }, {\n    key: \"shrink\",\n    value: function shrink(value, shrunkOnce) {\n      var context = shrunkOnce === true ? this.shrunkOnceContext() : undefined;\n      return this.contextualShrink(value, context).map(removeContextFromContextualValue);\n    }\n  }, {\n    key: \"shrinkableFor\",\n    value: function shrinkableFor(value, shrunkOnce) {\n      var _this2 = this;\n\n      return new Shrinkable(value, function () {\n        return _this2.shrink(value, shrunkOnce).map(function (value) {\n          return _this2.shrinkableFor(value, true);\n        });\n      });\n    }\n  }]);\n\n  return ArbitraryWithContextualShrink;\n}(Arbitrary);\n\nexport { ArbitraryWithContextualShrink };","map":null,"metadata":{},"sourceType":"module"}