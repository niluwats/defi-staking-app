{"ast":null,"code":"\"use strict\";\n\nvar _regeneratorRuntime = require(\"D:\\\\truff\\\\defi-staking-app-starter\\\\defi-staking-app-starter\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/regenerator\");\n\nvar _marked = /*#__PURE__*/_regeneratorRuntime.mark(decodeTopic);\n\nvar __createBinding = this && this.__createBinding || (Object.create ? function (o, m, k, k2) {\n  if (k2 === undefined) k2 = k;\n  Object.defineProperty(o, k2, {\n    enumerable: true,\n    get: function get() {\n      return m[k];\n    }\n  });\n} : function (o, m, k, k2) {\n  if (k2 === undefined) k2 = k;\n  o[k2] = m[k];\n});\n\nvar __setModuleDefault = this && this.__setModuleDefault || (Object.create ? function (o, v) {\n  Object.defineProperty(o, \"default\", {\n    enumerable: true,\n    value: v\n  });\n} : function (o, v) {\n  o[\"default\"] = v;\n});\n\nvar __importStar = this && this.__importStar || function (mod) {\n  if (mod && mod.__esModule) return mod;\n  var result = {};\n  if (mod != null) for (var k in mod) {\n    if (k !== \"default\" && Object.prototype.hasOwnProperty.call(mod, k)) __createBinding(result, mod, k);\n  }\n\n  __setModuleDefault(result, mod);\n\n  return result;\n};\n\nvar __importDefault = this && this.__importDefault || function (mod) {\n  return mod && mod.__esModule ? mod : {\n    \"default\": mod\n  };\n};\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.decodeTopic = void 0;\n\nvar debug_1 = __importDefault(require(\"debug\"));\n\nvar debug = debug_1.default(\"codec:topic:decode\");\n\nvar read_1 = __importDefault(require(\"../../read\"));\n\nvar Basic = __importStar(require(\"../../basic\"));\n\nvar Format = __importStar(require(\"../../format\"));\n\nvar Conversion = __importStar(require(\"../../conversion\"));\n\nfunction decodeTopic(dataType, pointer, info) {\n  var options,\n      bytes,\n      raw,\n      _args = arguments;\n  return _regeneratorRuntime.wrap(function decodeTopic$(_context) {\n    while (1) {\n      switch (_context.prev = _context.next) {\n        case 0:\n          options = _args.length > 3 && _args[3] !== undefined ? _args[3] : {};\n\n          if (!(Format.Types.isReferenceType(dataType) || dataType.typeClass === \"tuple\")) {\n            _context.next = 6;\n            break;\n          }\n\n          return _context.delegateYield(read_1.default(pointer, info.state), \"t0\", 3);\n\n        case 3:\n          bytes = _context.t0;\n          raw = Conversion.toHexString(bytes); //NOTE: even in strict mode we want to just return this, not throw an error here\n\n          return _context.abrupt(\"return\", {\n            //dunno why TS is failing here\n            type: dataType,\n            kind: \"error\",\n            error: {\n              kind: \"IndexedReferenceTypeError\",\n              type: dataType,\n              raw: raw\n            }\n          });\n\n        case 6:\n          return _context.delegateYield(Basic.Decode.decodeBasic(dataType, pointer, info, options), \"t1\", 7);\n\n        case 7:\n          return _context.abrupt(\"return\", _context.t1);\n\n        case 8:\n        case \"end\":\n          return _context.stop();\n      }\n    }\n  }, _marked);\n}\n\nexports.decodeTopic = decodeTopic;","map":null,"metadata":{},"sourceType":"script"}