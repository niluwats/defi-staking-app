{"ast":null,"code":"import _regeneratorRuntime from \"D:\\\\truff\\\\defi-staking-app-starter\\\\defi-staking-app-starter\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/regenerator\";\nimport _asyncToGenerator from \"D:\\\\truff\\\\defi-staking-app-starter\\\\defi-staking-app-starter\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/asyncToGenerator\";\nimport _classCallCheck from \"D:\\\\truff\\\\defi-staking-app-starter\\\\defi-staking-app-starter\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"D:\\\\truff\\\\defi-staking-app-starter\\\\defi-staking-app-starter\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/createClass\";\nimport _possibleConstructorReturn from \"D:\\\\truff\\\\defi-staking-app-starter\\\\defi-staking-app-starter\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/possibleConstructorReturn\";\nimport _getPrototypeOf from \"D:\\\\truff\\\\defi-staking-app-starter\\\\defi-staking-app-starter\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/getPrototypeOf\";\nimport _inherits from \"D:\\\\truff\\\\defi-staking-app-starter\\\\defi-staking-app-starter\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/inherits\";\nimport _assertThisInitialized from \"D:\\\\truff\\\\defi-staking-app-starter\\\\defi-staking-app-starter\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/assertThisInitialized\";\nvar _jsxFileName = \"D:\\\\truff\\\\defi-staking-app-starter\\\\defi-staking-app-starter\\\\src\\\\components\\\\Airdrop.js\";\nimport React, { Component } from \"react\";\nimport loadContract from \"../scripts/issue-tokens.js\";\nimport detectEthereumProvider from \"@metamask/detect-provider\";\n\nvar Airdrop = /*#__PURE__*/function (_Component) {\n  _inherits(Airdrop, _Component);\n\n  function Airdrop() {\n    var _this;\n\n    _classCallCheck(this, Airdrop);\n\n    _this = _possibleConstructorReturn(this, _getPrototypeOf(Airdrop).call(this));\n    _this.state = {\n      time: {},\n      seconds: 5\n    };\n    _this.timer = 0;\n    _this.startTimer = _this.startTimer.bind(_assertThisInitialized(_assertThisInitialized(_this)));\n    _this.countDown = _this.countDown.bind(_assertThisInitialized(_assertThisInitialized(_this)));\n    return _this;\n  }\n\n  _createClass(Airdrop, [{\n    key: \"startTimer\",\n    value: function startTimer() {\n      if (this.timer == 0 && this.state.seconds > 0) {\n        this.timer = setInterval(this.countDown, 1000);\n      }\n    }\n  }, {\n    key: \"countDown\",\n    value: function countDown() {\n      var seconds = this.state.seconds - 1;\n      this.setState({\n        time: this.secondsToTime(seconds),\n        seconds: seconds\n      });\n\n      if (seconds == 0) {\n        clearInterval(this.timer);\n      }\n    }\n  }, {\n    key: \"secondsToTime\",\n    value: function secondsToTime(secs) {\n      var hours, minutes, seconds;\n      hours = Math.floor(secs / (60 * 60));\n      var devisor_for_minutes = secs % (60 * 60);\n      minutes = Math.floor(devisor_for_minutes / 60);\n      var devisor_for_seconds = devisor_for_minutes % 60;\n      seconds = Math.ceil(devisor_for_seconds);\n      var obj = {\n        h: hours,\n        m: minutes,\n        s: seconds\n      };\n      return obj;\n    }\n  }, {\n    key: \"componentDidMount\",\n    value: function componentDidMount() {\n      var timeLeftVar = this.secondsToTime(this.state.seconds);\n      this.setState({\n        time: timeLeftVar\n      });\n    }\n  }, {\n    key: \"airdropReleaseTokens\",\n    value: function airdropReleaseTokens() {\n      var stakingB = this.props.stakingBalance;\n\n      if (stakingB >= \"50000000000000000000\") {\n        this.startTimer();\n      }\n    }\n  }, {\n    key: \"issueTokens\",\n    value: function () {\n      var _issueTokens = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime.mark(function _callee() {\n        var provider;\n        return _regeneratorRuntime.wrap(function _callee$(_context) {\n          while (1) {\n            switch (_context.prev = _context.next) {\n              case 0:\n                if (!(this.state.seconds == 0)) {\n                  _context.next = 6;\n                  break;\n                }\n\n                _context.next = 3;\n                return detectEthereumProvider();\n\n              case 3:\n                provider = _context.sent;\n                console.log(provider); // this.props.issueTokens();\n\n                loadContract(\"DecentralBank\", provider); // console.log(contract);\n                // issueRewards();\n\n              case 6:\n              case \"end\":\n                return _context.stop();\n            }\n          }\n        }, _callee, this);\n      }));\n\n      function issueTokens() {\n        return _issueTokens.apply(this, arguments);\n      }\n\n      return issueTokens;\n    }()\n  }, {\n    key: \"render\",\n    value: function render() {\n      this.airdropReleaseTokens();\n      this.issueTokens();\n      return /*#__PURE__*/React.createElement(\"div\", {\n        style: {\n          color: \"black\"\n        },\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 73,\n          columnNumber: 7\n        }\n      }, this.state.time.m, \":\", this.state.time.s);\n    }\n  }]);\n\n  return Airdrop;\n}(Component);\n\nexport default Airdrop;","map":{"version":3,"sources":["D:/truff/defi-staking-app-starter/defi-staking-app-starter/src/components/Airdrop.js"],"names":["React","Component","loadContract","detectEthereumProvider","Airdrop","state","time","seconds","timer","startTimer","bind","countDown","setInterval","setState","secondsToTime","clearInterval","secs","hours","minutes","Math","floor","devisor_for_minutes","devisor_for_seconds","ceil","obj","h","m","s","timeLeftVar","stakingB","props","stakingBalance","provider","console","log","airdropReleaseTokens","issueTokens","color"],"mappings":";;;;;;;;;AAAA,OAAOA,KAAP,IAAgBC,SAAhB,QAAiC,OAAjC;AACA,OAAOC,YAAP,MAAyB,4BAAzB;AACA,OAAOC,sBAAP,MAAmC,2BAAnC;;IAEMC,O;;;AACJ,qBAAc;AAAA;;AAAA;;AACZ;AACA,UAAKC,KAAL,GAAa;AAAEC,MAAAA,IAAI,EAAE,EAAR;AAAYC,MAAAA,OAAO,EAAE;AAArB,KAAb;AACA,UAAKC,KAAL,GAAa,CAAb;AACA,UAAKC,UAAL,GAAkB,MAAKA,UAAL,CAAgBC,IAAhB,uDAAlB;AACA,UAAKC,SAAL,GAAiB,MAAKA,SAAL,CAAeD,IAAf,uDAAjB;AALY;AAMb;;;;iCAEY;AACX,UAAI,KAAKF,KAAL,IAAc,CAAd,IAAmB,KAAKH,KAAL,CAAWE,OAAX,GAAqB,CAA5C,EAA+C;AAC7C,aAAKC,KAAL,GAAaI,WAAW,CAAC,KAAKD,SAAN,EAAiB,IAAjB,CAAxB;AACD;AACF;;;gCAEW;AACV,UAAIJ,OAAO,GAAG,KAAKF,KAAL,CAAWE,OAAX,GAAqB,CAAnC;AACA,WAAKM,QAAL,CAAc;AAAEP,QAAAA,IAAI,EAAE,KAAKQ,aAAL,CAAmBP,OAAnB,CAAR;AAAqCA,QAAAA,OAAO,EAAEA;AAA9C,OAAd;;AACA,UAAIA,OAAO,IAAI,CAAf,EAAkB;AAChBQ,QAAAA,aAAa,CAAC,KAAKP,KAAN,CAAb;AACD;AACF;;;kCAEaQ,I,EAAM;AAClB,UAAIC,KAAJ,EAAWC,OAAX,EAAoBX,OAApB;AACAU,MAAAA,KAAK,GAAGE,IAAI,CAACC,KAAL,CAAWJ,IAAI,IAAI,KAAK,EAAT,CAAf,CAAR;AAEA,UAAIK,mBAAmB,GAAGL,IAAI,IAAI,KAAK,EAAT,CAA9B;AACAE,MAAAA,OAAO,GAAGC,IAAI,CAACC,KAAL,CAAWC,mBAAmB,GAAG,EAAjC,CAAV;AAEA,UAAIC,mBAAmB,GAAGD,mBAAmB,GAAG,EAAhD;AACAd,MAAAA,OAAO,GAAGY,IAAI,CAACI,IAAL,CAAUD,mBAAV,CAAV;AAEA,UAAIE,GAAG,GAAG;AACRC,QAAAA,CAAC,EAAER,KADK;AAERS,QAAAA,CAAC,EAAER,OAFK;AAGRS,QAAAA,CAAC,EAAEpB;AAHK,OAAV;AAKA,aAAOiB,GAAP;AACD;;;wCAEmB;AAClB,UAAII,WAAW,GAAG,KAAKd,aAAL,CAAmB,KAAKT,KAAL,CAAWE,OAA9B,CAAlB;AACA,WAAKM,QAAL,CAAc;AAAEP,QAAAA,IAAI,EAAEsB;AAAR,OAAd;AACD;;;2CAEsB;AACrB,UAAIC,QAAQ,GAAG,KAAKC,KAAL,CAAWC,cAA1B;;AACA,UAAIF,QAAQ,IAAI,sBAAhB,EAAwC;AACtC,aAAKpB,UAAL;AACD;AACF;;;;;;;;;;sBAGK,KAAKJ,KAAL,CAAWE,OAAX,IAAsB,C;;;;;;uBACDJ,sBAAsB,E;;;AAAvC6B,gBAAAA,Q;AACNC,gBAAAA,OAAO,CAACC,GAAR,CAAYF,QAAZ,E,CACA;;AACA9B,gBAAAA,YAAY,CAAC,eAAD,EAAkB8B,QAAlB,CAAZ,C,CACA;AACA;;;;;;;;;;;;;;;;;;6BAIK;AACP,WAAKG,oBAAL;AACA,WAAKC,WAAL;AACA,0BACE;AAAK,QAAA,KAAK,EAAE;AAAEC,UAAAA,KAAK,EAAE;AAAT,SAAZ;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SACG,KAAKhC,KAAL,CAAWC,IAAX,CAAgBoB,CADnB,OACuB,KAAKrB,KAAL,CAAWC,IAAX,CAAgBqB,CADvC,CADF;AAKD;;;;EAxEmB1B,S;;AA2EtB,eAAeG,OAAf","sourcesContent":["import React, { Component } from \"react\";\r\nimport loadContract from \"../scripts/issue-tokens.js\";\r\nimport detectEthereumProvider from \"@metamask/detect-provider\";\r\n\r\nclass Airdrop extends Component {\r\n  constructor() {\r\n    super();\r\n    this.state = { time: {}, seconds: 5 };\r\n    this.timer = 0;\r\n    this.startTimer = this.startTimer.bind(this);\r\n    this.countDown = this.countDown.bind(this);\r\n  }\r\n\r\n  startTimer() {\r\n    if (this.timer == 0 && this.state.seconds > 0) {\r\n      this.timer = setInterval(this.countDown, 1000);\r\n    }\r\n  }\r\n\r\n  countDown() {\r\n    let seconds = this.state.seconds - 1;\r\n    this.setState({ time: this.secondsToTime(seconds), seconds: seconds });\r\n    if (seconds == 0) {\r\n      clearInterval(this.timer);\r\n    }\r\n  }\r\n\r\n  secondsToTime(secs) {\r\n    let hours, minutes, seconds;\r\n    hours = Math.floor(secs / (60 * 60));\r\n\r\n    let devisor_for_minutes = secs % (60 * 60);\r\n    minutes = Math.floor(devisor_for_minutes / 60);\r\n\r\n    let devisor_for_seconds = devisor_for_minutes % 60;\r\n    seconds = Math.ceil(devisor_for_seconds);\r\n\r\n    let obj = {\r\n      h: hours,\r\n      m: minutes,\r\n      s: seconds,\r\n    };\r\n    return obj;\r\n  }\r\n\r\n  componentDidMount() {\r\n    let timeLeftVar = this.secondsToTime(this.state.seconds);\r\n    this.setState({ time: timeLeftVar });\r\n  }\r\n\r\n  airdropReleaseTokens() {\r\n    let stakingB = this.props.stakingBalance;\r\n    if (stakingB >= \"50000000000000000000\") {\r\n      this.startTimer();\r\n    }\r\n  }\r\n\r\n  async issueTokens() {\r\n    if (this.state.seconds == 0) {\r\n      const provider = await detectEthereumProvider();\r\n      console.log(provider);\r\n      // this.props.issueTokens();\r\n      loadContract(\"DecentralBank\", provider);\r\n      // console.log(contract);\r\n      // issueRewards();\r\n    }\r\n  }\r\n\r\n  render() {\r\n    this.airdropReleaseTokens();\r\n    this.issueTokens();\r\n    return (\r\n      <div style={{ color: \"black\" }}>\r\n        {this.state.time.m}:{this.state.time.s}\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nexport default Airdrop;\r\n"]},"metadata":{},"sourceType":"module"}