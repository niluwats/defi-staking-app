{"ast":null,"code":"import _classCallCheck from \"D:\\\\truff\\\\defi-staking-app-starter\\\\defi-staking-app-starter\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"D:\\\\truff\\\\defi-staking-app-starter\\\\defi-staking-app-starter\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/createClass\";\nimport _possibleConstructorReturn from \"D:\\\\truff\\\\defi-staking-app-starter\\\\defi-staking-app-starter\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/possibleConstructorReturn\";\nimport _getPrototypeOf from \"D:\\\\truff\\\\defi-staking-app-starter\\\\defi-staking-app-starter\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/getPrototypeOf\";\nimport _inherits from \"D:\\\\truff\\\\defi-staking-app-starter\\\\defi-staking-app-starter\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/inherits\";\n\nvar _a;\n\nimport { Stream } from '../../../stream/Stream.js';\nimport { ConverterFromNext } from './ConverterFromNext.js';\nimport { NextArbitrary } from './NextArbitrary.js';\nimport { NextValue } from './NextValue.js';\nvar identifier = '__ConverterToNext__';\nexport function fromShrinkableToNextValue(g) {\n  if (!g.hasToBeCloned) {\n    return new NextValue(g.value_, g);\n  }\n\n  return new NextValue(g.value_, g, function () {\n    return g.value;\n  });\n}\nexport var ConverterToNext = /*#__PURE__*/function (_NextArbitrary) {\n  _inherits(ConverterToNext, _NextArbitrary);\n\n  function ConverterToNext(arb) {\n    var _this;\n\n    _classCallCheck(this, ConverterToNext);\n\n    _this = _possibleConstructorReturn(this, _getPrototypeOf(ConverterToNext).call(this));\n    _this.arb = arb;\n    _this[_a] = true;\n    return _this;\n  }\n\n  _createClass(ConverterToNext, [{\n    key: \"generate\",\n    value: function generate(mrng, biasFactor) {\n      var g = biasFactor !== undefined ? this.arb.withBias(biasFactor).generate(mrng) : this.arb.generate(mrng);\n      return fromShrinkableToNextValue(g);\n    }\n  }, {\n    key: \"canShrinkWithoutContext\",\n    value: function canShrinkWithoutContext(_value) {\n      return false;\n    }\n  }, {\n    key: \"shrink\",\n    value: function shrink(_value, context) {\n      if (this.isSafeContext(context)) {\n        return context.shrink().map(fromShrinkableToNextValue);\n      }\n\n      return Stream.nil();\n    }\n  }, {\n    key: \"isSafeContext\",\n    value: function isSafeContext(context) {\n      return context != null && typeof context === 'object' && 'value' in context && 'shrink' in context;\n    }\n  }, {\n    key: \"filter\",\n    value: function filter(refinement) {\n      return ConverterToNext.convertIfNeeded(this.arb.filter(refinement));\n    }\n  }, {\n    key: \"map\",\n    value: function map(mapper) {\n      return ConverterToNext.convertIfNeeded(this.arb.map(mapper));\n    }\n  }, {\n    key: \"chain\",\n    value: function chain(fmapper) {\n      return ConverterToNext.convertIfNeeded(this.arb.chain(function (t) {\n        var fmapped = fmapper(t);\n        if (ConverterToNext.isConverterToNext(fmapped)) return fmapped.arb;else return new ConverterFromNext(fmapped);\n      }));\n    }\n  }, {\n    key: \"noShrink\",\n    value: function noShrink() {\n      return ConverterToNext.convertIfNeeded(this.arb.noShrink());\n    }\n  }, {\n    key: \"noBias\",\n    value: function noBias() {\n      return ConverterToNext.convertIfNeeded(this.arb.noBias());\n    }\n  }], [{\n    key: \"isConverterToNext\",\n    value: function isConverterToNext(arb) {\n      return identifier in arb;\n    }\n  }, {\n    key: \"convertIfNeeded\",\n    value: function convertIfNeeded(arb) {\n      if (ConverterFromNext.isConverterFromNext(arb)) return arb.arb;else return new ConverterToNext(arb);\n    }\n  }]);\n\n  return ConverterToNext;\n}(NextArbitrary);\n_a = identifier;","map":null,"metadata":{},"sourceType":"module"}