{"ast":null,"code":"\"use strict\";\n\nvar _regeneratorRuntime = require(\"D:\\\\truff\\\\defi-staking-app-starter\\\\defi-staking-app-starter\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/regenerator\");\n\nvar _classCallCheck = require(\"D:\\\\truff\\\\defi-staking-app-starter\\\\defi-staking-app-starter\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/classCallCheck\");\n\nvar _createClass = require(\"D:\\\\truff\\\\defi-staking-app-starter\\\\defi-staking-app-starter\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/createClass\");\n\nvar __awaiter = this && this.__awaiter || function (thisArg, _arguments, P, generator) {\n  function adopt(value) {\n    return value instanceof P ? value : new P(function (resolve) {\n      resolve(value);\n    });\n  }\n\n  return new (P || (P = Promise))(function (resolve, reject) {\n    function fulfilled(value) {\n      try {\n        step(generator.next(value));\n      } catch (e) {\n        reject(e);\n      }\n    }\n\n    function rejected(value) {\n      try {\n        step(generator[\"throw\"](value));\n      } catch (e) {\n        reject(e);\n      }\n    }\n\n    function step(result) {\n      result.done ? resolve(result.value) : adopt(result.value).then(fulfilled, rejected);\n    }\n\n    step((generator = generator.apply(thisArg, _arguments || [])).next());\n  });\n};\n\nvar __importDefault = this && this.__importDefault || function (mod) {\n  return mod && mod.__esModule ? mod : {\n    \"default\": mod\n  };\n};\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.Web3InterfaceAdapter = void 0;\n\nvar bn_js_1 = __importDefault(require(\"bn.js\"));\n\nvar shim_1 = require(\"../../shim\");\n\nvar Web3InterfaceAdapter = /*#__PURE__*/function () {\n  function Web3InterfaceAdapter() {\n    var _ref = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : {},\n        provider = _ref.provider,\n        networkType = _ref.networkType;\n\n    _classCallCheck(this, Web3InterfaceAdapter);\n\n    this.web3 = new shim_1.Web3Shim({\n      provider: provider,\n      networkType: networkType\n    });\n  }\n\n  _createClass(Web3InterfaceAdapter, [{\n    key: \"getNetworkId\",\n    value: function getNetworkId() {\n      return this.web3.eth.net.getId();\n    }\n  }, {\n    key: \"getBlock\",\n    value: function getBlock(block) {\n      return this.web3.eth.getBlock(block);\n    }\n  }, {\n    key: \"getTransaction\",\n    value: function getTransaction(tx) {\n      return this.web3.eth.getTransaction(tx);\n    }\n  }, {\n    key: \"getTransactionReceipt\",\n    value: function getTransactionReceipt(tx) {\n      return this.web3.eth.getTransactionReceipt(tx);\n    }\n  }, {\n    key: \"getBalance\",\n    value: function getBalance(address) {\n      return this.web3.eth.getBalance(address);\n    }\n  }, {\n    key: \"getCode\",\n    value: function getCode(address) {\n      return this.web3.eth.getCode(address);\n    }\n  }, {\n    key: \"getAccounts\",\n    value: function getAccounts() {\n      return this.web3.eth.getAccounts();\n    }\n  }, {\n    key: \"estimateGas\",\n    value: function estimateGas(transactionConfig) {\n      var stacktrace = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : false;\n      return __awaiter(this, void 0, void 0, /*#__PURE__*/_regeneratorRuntime.mark(function _callee() {\n        var gasEstimate;\n        return _regeneratorRuntime.wrap(function _callee$(_context) {\n          while (1) {\n            switch (_context.prev = _context.next) {\n              case 0:\n                if (!(stacktrace === true)) {\n                  _context.next = 13;\n                  break;\n                }\n\n                _context.prev = 1;\n                _context.next = 4;\n                return this.web3.eth.estimateGas(transactionConfig);\n\n              case 4:\n                gasEstimate = _context.sent;\n                return _context.abrupt(\"return\", gasEstimate);\n\n              case 8:\n                _context.prev = 8;\n                _context.t0 = _context[\"catch\"](1);\n                return _context.abrupt(\"return\", null);\n\n              case 11:\n                _context.next = 14;\n                break;\n\n              case 13:\n                return _context.abrupt(\"return\", this.web3.eth.estimateGas(transactionConfig));\n\n              case 14:\n              case \"end\":\n                return _context.stop();\n            }\n          }\n        }, _callee, this, [[1, 8]]);\n      }));\n    }\n  }, {\n    key: \"getBlockNumber\",\n    value: function getBlockNumber() {\n      return this.web3.eth.getBlockNumber();\n    }\n  }, {\n    key: \"getTransactionCostReport\",\n    value: function getTransactionCostReport(receipt) {\n      return __awaiter(this, void 0, void 0, /*#__PURE__*/_regeneratorRuntime.mark(function _callee2() {\n        var tx, block, balance, gasPrice, gas, value, cost;\n        return _regeneratorRuntime.wrap(function _callee2$(_context2) {\n          while (1) {\n            switch (_context2.prev = _context2.next) {\n              case 0:\n                _context2.next = 2;\n                return this.getTransaction(receipt.transactionHash);\n\n              case 2:\n                tx = _context2.sent;\n                _context2.next = 5;\n                return this.getBlock(receipt.blockNumber);\n\n              case 5:\n                block = _context2.sent;\n\n                if (block) {\n                  _context2.next = 8;\n                  break;\n                }\n\n                return _context2.abrupt(\"return\", null);\n\n              case 8:\n                _context2.next = 10;\n                return this.getBalance(tx.from);\n\n              case 10:\n                balance = _context2.sent;\n                gasPrice = new bn_js_1.default(tx.gasPrice);\n                gas = new bn_js_1.default(receipt.gasUsed);\n                value = new bn_js_1.default(tx.value);\n                cost = gasPrice.mul(gas).add(value);\n                return _context2.abrupt(\"return\", {\n                  timestamp: block.timestamp,\n                  from: tx.from,\n                  balance: shim_1.Web3Shim.utils.fromWei(balance, \"ether\"),\n                  gasUnit: \"gwei\",\n                  gasPrice: shim_1.Web3Shim.utils.fromWei(gasPrice, \"gwei\"),\n                  gas: gas,\n                  valueUnit: \"ETH\",\n                  value: shim_1.Web3Shim.utils.fromWei(value, \"ether\"),\n                  cost: cost\n                });\n\n              case 16:\n              case \"end\":\n                return _context2.stop();\n            }\n          }\n        }, _callee2, this);\n      }));\n    }\n  }, {\n    key: \"displayCost\",\n    value: function displayCost(value) {\n      return shim_1.Web3Shim.utils.fromWei(value, \"ether\");\n    }\n  }]);\n\n  return Web3InterfaceAdapter;\n}();\n\nexports.Web3InterfaceAdapter = Web3InterfaceAdapter;","map":null,"metadata":{},"sourceType":"script"}