{"ast":null,"code":"\"use strict\";\n\nvar _toConsumableArray = require(\"D:\\\\truff\\\\defi-staking-app-starter\\\\defi-staking-app-starter\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/toConsumableArray\");\n\nvar _defineProperty = require(\"D:\\\\truff\\\\defi-staking-app-starter\\\\defi-staking-app-starter\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/defineProperty\");\n\nvar _slicedToArray = require(\"D:\\\\truff\\\\defi-staking-app-starter\\\\defi-staking-app-starter\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/slicedToArray\");\n\nvar __createBinding = this && this.__createBinding || (Object.create ? function (o, m, k, k2) {\n  if (k2 === undefined) k2 = k;\n  Object.defineProperty(o, k2, {\n    enumerable: true,\n    get: function get() {\n      return m[k];\n    }\n  });\n} : function (o, m, k, k2) {\n  if (k2 === undefined) k2 = k;\n  o[k2] = m[k];\n});\n\nvar __setModuleDefault = this && this.__setModuleDefault || (Object.create ? function (o, v) {\n  Object.defineProperty(o, \"default\", {\n    enumerable: true,\n    value: v\n  });\n} : function (o, v) {\n  o[\"default\"] = v;\n});\n\nvar __importStar = this && this.__importStar || function (mod) {\n  if (mod && mod.__esModule) return mod;\n  var result = {};\n  if (mod != null) for (var k in mod) {\n    if (k !== \"default\" && Object.prototype.hasOwnProperty.call(mod, k)) __createBinding(result, mod, k);\n  }\n\n  __setModuleDefault(result, mod);\n\n  return result;\n};\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.collectSources = void 0;\n\nvar path = __importStar(require(\"path\"));\n/**\n * Collects sources, targets into collections with OS-independent paths,\n * along with a reverse mapping to the original path (for post-processing)\n *\n * @param originalSources - { [originalSourcePath]: contents }\n * @param originalTargets - originalSourcePath[]\n * @param baseDirectory - a directory to remove as a prefix\n * @param replacement - what to replace it with\n * @return { sources, targets, originalSourcePaths }\n */\n\n\nfunction collectSources(originalSources) {\n  var originalTargets = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : [];\n  var baseDirectory = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : \"\";\n  var replacement = arguments.length > 3 && arguments[3] !== undefined ? arguments[3] : \"/\";\n  var mappedResults = Object.entries(originalSources).filter(function (_ref) {\n    var _ref2 = _slicedToArray(_ref, 2),\n        originalSourcePath = _ref2[0],\n        _ = _ref2[1];\n\n    return !path.isAbsolute(originalSourcePath) || originalSourcePath.startsWith(baseDirectory);\n  }).map(function (_ref3) {\n    var _ref4 = _slicedToArray(_ref3, 2),\n        originalSourcePath = _ref4[0],\n        contents = _ref4[1];\n\n    return {\n      originalSourcePath: originalSourcePath,\n      contents: contents,\n      sourcePath: getPortableSourcePath(replaceRootDirectory(originalSourcePath, baseDirectory, replacement))\n    };\n  }).map(function (_ref5) {\n    var originalSourcePath = _ref5.originalSourcePath,\n        sourcePath = _ref5.sourcePath,\n        contents = _ref5.contents;\n    return {\n      sources: _defineProperty({}, sourcePath, contents),\n      // include transformed form as target if original is a target\n      targets: originalTargets.includes(originalSourcePath) ? [sourcePath] : [],\n      originalSourcePaths: _defineProperty({}, sourcePath, originalSourcePath)\n    };\n  });\n  var defaultAccumulator = {\n    sources: {},\n    targets: [],\n    originalSourcePaths: {}\n  };\n  return mappedResults.reduce(function (accumulator, result) {\n    return {\n      sources: Object.assign({}, accumulator.sources, result.sources),\n      targets: [].concat(_toConsumableArray(accumulator.targets), _toConsumableArray(result.targets)),\n      originalSourcePaths: Object.assign({}, accumulator.originalSourcePaths, result.originalSourcePaths)\n    };\n  }, defaultAccumulator);\n}\n\nexports.collectSources = collectSources;\n/**\n * @param sourcePath - string\n * @return string - operating system independent path\n * @private\n */\n\nfunction getPortableSourcePath(sourcePath) {\n  var replacement = sourcePath; //on Windows, replace backslashes with forward slashes\n\n  if (path.sep === '\\\\') {\n    replacement = sourcePath.replace(/\\\\/g, \"/\");\n  } // Turn G:/.../ into /G/.../ for Windows\n\n\n  if (replacement.length >= 2 && replacement[1] === \":\") {\n    replacement = \"/\" + replacement;\n    replacement = replacement.replace(\":\", \"\");\n  }\n\n  return replacement;\n}\n\nfunction replaceRootDirectory(sourcePath, rootDirectory, replacement) {\n  //make sure root directory ends in a separator\n  if (!rootDirectory.endsWith(path.sep)) {\n    rootDirectory = rootDirectory + path.sep;\n  }\n\n  return sourcePath.startsWith(rootDirectory) ? replacement + sourcePath.slice(rootDirectory.length) //remove prefix\n  : sourcePath;\n}","map":null,"metadata":{},"sourceType":"script"}