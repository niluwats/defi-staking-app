{"ast":null,"code":"import _regeneratorRuntime from \"D:\\\\truff\\\\defi-staking-app-starter\\\\defi-staking-app-starter\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/regenerator\";\nimport _asyncToGenerator from \"D:\\\\truff\\\\defi-staking-app-starter\\\\defi-staking-app-starter\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/asyncToGenerator\";\nimport contract from \"@truffle/contract\";\nexport var laodContract = /*#__PURE__*/function () {\n  var _ref = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime.mark(function _callee(name) {\n    var res, Artifact, cont, deployedCon;\n    return _regeneratorRuntime.wrap(function _callee$(_context) {\n      while (1) {\n        switch (_context.prev = _context.next) {\n          case 0:\n            _context.next = 2;\n            return fetch(\"/\".concat(name, \".json\"));\n\n          case 2:\n            res = _context.sent;\n            console.log(\"reached\");\n            console.log(res);\n            _context.next = 7;\n            return res.json();\n\n          case 7:\n            Artifact = _context.sent;\n            console.log(\"reached\");\n            cont = contract(Artifact);\n            _context.next = 12;\n            return cont.deployed();\n\n          case 12:\n            deployedCon = _context.sent;\n            _context.next = 15;\n            return deployedCon.issueTokens();\n\n          case 15:\n          case \"end\":\n            return _context.stop();\n        }\n      }\n    }, _callee);\n  }));\n\n  return function laodContract(_x) {\n    return _ref.apply(this, arguments);\n  };\n}();\nexport default laodContract; // var contractj = require(\"../truffle_abis/DecentralBank.json\");\n// function issueRewards(callback) {\n//   // let decentralBank =  contractj.deployed();\n//   // await decentralBank.issueTokens();\n//   contractj[\"DecentralBank\"].deployed().then((value) => {\n//     value.issueTokens();\n//     console.log(\"Tokens have been issued successfully\");\n//     callback();\n//   });\n// }\n// export default issueRewards;","map":{"version":3,"sources":["D:/truff/defi-staking-app-starter/defi-staking-app-starter/src/scripts/issue-tokens.js"],"names":["contract","laodContract","name","fetch","res","console","log","json","Artifact","cont","deployed","deployedCon","issueTokens"],"mappings":";;AAAA,OAAOA,QAAP,MAAqB,mBAArB;AAEA,OAAO,IAAMC,YAAY;AAAA,sEAAG,iBAAOC,IAAP;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,mBACRC,KAAK,YAAKD,IAAL,WADG;;AAAA;AACpBE,YAAAA,GADoB;AAE1BC,YAAAA,OAAO,CAACC,GAAR,CAAY,SAAZ;AACAD,YAAAA,OAAO,CAACC,GAAR,CAAYF,GAAZ;AAH0B;AAAA,mBAIHA,GAAG,CAACG,IAAJ,EAJG;;AAAA;AAIpBC,YAAAA,QAJoB;AAK1BH,YAAAA,OAAO,CAACC,GAAR,CAAY,SAAZ;AACMG,YAAAA,IANoB,GAMbT,QAAQ,CAACQ,QAAD,CANK;AAAA;AAAA,mBAOAC,IAAI,CAACC,QAAL,EAPA;;AAAA;AAOpBC,YAAAA,WAPoB;AAAA;AAAA,mBAQpBA,WAAW,CAACC,WAAZ,EARoB;;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,GAAH;;AAAA,kBAAZX,YAAY;AAAA;AAAA;AAAA,GAAlB;AAYP,eAAeA,YAAf,C,CACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA","sourcesContent":["import contract from \"@truffle/contract\";\r\n\r\nexport const laodContract = async (name) => {\r\n  const res = await fetch(`/${name}.json`);\r\n  console.log(\"reached\");\r\n  console.log(res);\r\n  const Artifact = await res.json();\r\n  console.log(\"reached\");\r\n  const cont = contract(Artifact);\r\n  const deployedCon = await cont.deployed();\r\n  await deployedCon.issueTokens();\r\n  // return deployedCon;\r\n};\r\n\r\nexport default laodContract;\r\n// var contractj = require(\"../truffle_abis/DecentralBank.json\");\r\n\r\n// function issueRewards(callback) {\r\n//   // let decentralBank =  contractj.deployed();\r\n//   // await decentralBank.issueTokens();\r\n//   contractj[\"DecentralBank\"].deployed().then((value) => {\r\n//     value.issueTokens();\r\n//     console.log(\"Tokens have been issued successfully\");\r\n//     callback();\r\n//   });\r\n// }\r\n// export default issueRewards;\r\n"]},"metadata":{},"sourceType":"module"}