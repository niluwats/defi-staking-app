{"ast":null,"code":"import _classCallCheck from \"D:\\\\truff\\\\defi-staking-app-starter\\\\defi-staking-app-starter\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"D:\\\\truff\\\\defi-staking-app-starter\\\\defi-staking-app-starter\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/createClass\";\nimport { PreconditionFailure } from '../precondition/PreconditionFailure.js';\nexport var SkipAfterProperty = /*#__PURE__*/function () {\n  function SkipAfterProperty(property, getTime, timeLimit, interruptExecution) {\n    _classCallCheck(this, SkipAfterProperty);\n\n    this.property = property;\n    this.getTime = getTime;\n    this.interruptExecution = interruptExecution;\n    this.skipAfterTime = this.getTime() + timeLimit;\n  }\n\n  _createClass(SkipAfterProperty, [{\n    key: \"isAsync\",\n    value: function isAsync() {\n      return this.property.isAsync();\n    }\n  }, {\n    key: \"generate\",\n    value: function generate(mrng, runId) {\n      return this.property.generate(mrng, runId);\n    }\n  }, {\n    key: \"shrink\",\n    value: function shrink(value) {\n      return this.property.shrink(value);\n    }\n  }, {\n    key: \"run\",\n    value: function run(v) {\n      if (this.getTime() >= this.skipAfterTime) {\n        var preconditionFailure = new PreconditionFailure(this.interruptExecution);\n\n        if (this.isAsync()) {\n          return Promise.resolve(preconditionFailure);\n        } else {\n          return preconditionFailure;\n        }\n      }\n\n      return this.property.run(v);\n    }\n  }]);\n\n  return SkipAfterProperty;\n}();","map":null,"metadata":{},"sourceType":"module"}