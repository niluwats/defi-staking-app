{"ast":null,"code":"import _regeneratorRuntime from \"D:\\\\truff\\\\defi-staking-app-starter\\\\defi-staking-app-starter\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/regenerator\";\nimport _asyncToGenerator from \"D:\\\\truff\\\\defi-staking-app-starter\\\\defi-staking-app-starter\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/asyncToGenerator\";\nimport contract from \"@truffle/contract\"; // var contractj = require(\"../truffle_abis/DecentralBank.json\");\n// function issueRewards(callback) {\n//   // let decentralBank =  contractj.deployed();\n//   // await decentralBank.issueTokens();\n//   contractj[\"DecentralBank\"].deployed().then((value) => {\n//     value.issueTokens();\n//     console.log(\"Tokens have been issued successfully\");\n//     callback();\n//   });\n// }\n// export default issueRewards;\n\nexport var laodContract = /*#__PURE__*/function () {\n  var _ref = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime.mark(function _callee(name) {\n    var res, Artifact, contract, deployedCon;\n    return _regeneratorRuntime.wrap(function _callee$(_context) {\n      while (1) {\n        switch (_context.prev = _context.next) {\n          case 0:\n            _context.next = 2;\n            return fetch(\"/truffle-abis/\".concat(name, \".json\"));\n\n          case 2:\n            res = _context.sent;\n            _context.next = 5;\n            return res.json();\n\n          case 5:\n            Artifact = _context.sent;\n            contract = contract(Artifact);\n            _context.next = 9;\n            return contract.deployed();\n\n          case 9:\n            deployedCon = _context.sent;\n            return _context.abrupt(\"return\", deployedCon);\n\n          case 11:\n          case \"end\":\n            return _context.stop();\n        }\n      }\n    }, _callee);\n  }));\n\n  return function laodContract(_x) {\n    return _ref.apply(this, arguments);\n  };\n}();","map":{"version":3,"sources":["D:/truff/defi-staking-app-starter/defi-staking-app-starter/src/scripts/issue-tokens.js"],"names":["contract","laodContract","name","fetch","res","json","Artifact","deployed","deployedCon"],"mappings":";;AAAA,OAAOA,QAAP,MAAqB,mBAArB,C,CACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA,OAAO,IAAMC,YAAY;AAAA,sEAAG,iBAAOC,IAAP;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,mBACRC,KAAK,yBAAkBD,IAAlB,WADG;;AAAA;AACpBE,YAAAA,GADoB;AAAA;AAAA,mBAEHA,GAAG,CAACC,IAAJ,EAFG;;AAAA;AAEpBC,YAAAA,QAFoB;AAGpBN,YAAAA,QAHoB,GAGTA,QAAQ,CAACM,QAAD,CAHC;AAAA;AAAA,mBAIAN,QAAQ,CAACO,QAAT,EAJA;;AAAA;AAIpBC,YAAAA,WAJoB;AAAA,6CAKnBA,WALmB;;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,GAAH;;AAAA,kBAAZP,YAAY;AAAA;AAAA;AAAA,GAAlB","sourcesContent":["import contract from \"@truffle/contract\";\r\n// var contractj = require(\"../truffle_abis/DecentralBank.json\");\r\n\r\n// function issueRewards(callback) {\r\n//   // let decentralBank =  contractj.deployed();\r\n//   // await decentralBank.issueTokens();\r\n//   contractj[\"DecentralBank\"].deployed().then((value) => {\r\n//     value.issueTokens();\r\n//     console.log(\"Tokens have been issued successfully\");\r\n//     callback();\r\n//   });\r\n// }\r\n// export default issueRewards;\r\n\r\nexport const laodContract = async (name) => {\r\n  const res = await fetch(`/truffle-abis/${name}.json`);\r\n  const Artifact = await res.json();\r\n  const contract = contract(Artifact);\r\n  const deployedCon = await contract.deployed();\r\n  return deployedCon;\r\n};\r\n"]},"metadata":{},"sourceType":"module"}