{"ast":null,"code":"import _classCallCheck from \"D:\\\\truff\\\\defi-staking-app-starter\\\\defi-staking-app-starter\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"D:\\\\truff\\\\defi-staking-app-starter\\\\defi-staking-app-starter\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/createClass\";\nimport { stringify } from '../../utils/stringify.js';\nimport { PreconditionFailure } from '../precondition/PreconditionFailure.js';\n\nfunction fromSyncCached(cachedValue) {\n  return cachedValue === null ? new PreconditionFailure() : cachedValue;\n}\n\nfunction fromCached() {\n  for (var _len = arguments.length, data = new Array(_len), _key = 0; _key < _len; _key++) {\n    data[_key] = arguments[_key];\n  }\n\n  if (data[1]) return data[0].then(fromSyncCached);\n  return fromSyncCached(data[0]);\n}\n\nfunction fromCachedUnsafe(cachedValue, isAsync) {\n  return fromCached(cachedValue, isAsync);\n}\n\nexport var IgnoreEqualValuesProperty = /*#__PURE__*/function () {\n  function IgnoreEqualValuesProperty(property, skipRuns) {\n    _classCallCheck(this, IgnoreEqualValuesProperty);\n\n    this.property = property;\n    this.skipRuns = skipRuns;\n    this.coveredCases = new Map();\n  }\n\n  _createClass(IgnoreEqualValuesProperty, [{\n    key: \"isAsync\",\n    value: function isAsync() {\n      return this.property.isAsync();\n    }\n  }, {\n    key: \"generate\",\n    value: function generate(mrng, runId) {\n      return this.property.generate(mrng, runId);\n    }\n  }, {\n    key: \"shrink\",\n    value: function shrink(value) {\n      return this.property.shrink(value);\n    }\n  }, {\n    key: \"run\",\n    value: function run(v) {\n      var stringifiedValue = stringify(v);\n\n      if (this.coveredCases.has(stringifiedValue)) {\n        var lastOutput = this.coveredCases.get(stringifiedValue);\n\n        if (!this.skipRuns) {\n          return lastOutput;\n        }\n\n        return fromCachedUnsafe(lastOutput, this.property.isAsync());\n      }\n\n      var out = this.property.run(v);\n      this.coveredCases.set(stringifiedValue, out);\n      return out;\n    }\n  }]);\n\n  return IgnoreEqualValuesProperty;\n}();","map":null,"metadata":{},"sourceType":"module"}