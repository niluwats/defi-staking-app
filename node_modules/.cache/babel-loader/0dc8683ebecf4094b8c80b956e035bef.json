{"ast":null,"code":"import _regeneratorRuntime from \"D:\\\\truff\\\\defi-staking-app-starter\\\\defi-staking-app-starter\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/regenerator\";\n\nvar _marked = /*#__PURE__*/_regeneratorRuntime.mark(toss);\n\nimport { skipN } from 'pure-rand';\nimport { Random } from '../../random/generator/Random.js';\nimport { convertToRandomGenerator } from '../../random/generator/PureRandom.js';\nimport { NextValue } from '../arbitrary/definition/NextValue.js';\n\nfunction lazyGenerate(generator, rng, idx) {\n  return function () {\n    return generator.generate(new Random(rng), idx);\n  };\n}\n\nexport function toss(generator, seed, random, examples) {\n  var idx, rng;\n  return _regeneratorRuntime.wrap(function toss$(_context) {\n    while (1) {\n      switch (_context.prev = _context.next) {\n        case 0:\n          return _context.delegateYield(examples.map(function (e) {\n            return function () {\n              return new NextValue(e, undefined);\n            };\n          }), \"t0\", 1);\n\n        case 1:\n          idx = 0;\n          rng = convertToRandomGenerator(random(seed));\n\n        case 3:\n          rng = rng.jump ? rng.jump() : skipN(rng, 42);\n          _context.next = 6;\n          return lazyGenerate(generator, rng, idx++);\n\n        case 6:\n          _context.next = 3;\n          break;\n\n        case 8:\n        case \"end\":\n          return _context.stop();\n      }\n    }\n  }, _marked);\n}","map":null,"metadata":{},"sourceType":"module"}