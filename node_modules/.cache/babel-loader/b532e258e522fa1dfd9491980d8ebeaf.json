{"ast":null,"code":"import { convertFromNext } from '../check/arbitrary/definition/Converters.js';\nimport { buildSchedulerFor } from './_internals/helpers/BuildSchedulerFor.js';\nimport { SchedulerArbitrary } from './_internals/SchedulerArbitrary.js';\nexport function scheduler(constraints) {\n  var _ref = constraints || {},\n      _ref$act = _ref.act,\n      act = _ref$act === void 0 ? function (f) {\n    return f();\n  } : _ref$act;\n\n  return convertFromNext(new SchedulerArbitrary(act));\n}\n\nfunction schedulerFor(customOrderingOrConstraints, constraintsOrUndefined) {\n  var _ref2 = Array.isArray(customOrderingOrConstraints) ? constraintsOrUndefined || {} : customOrderingOrConstraints || {},\n      _ref2$act = _ref2.act,\n      act = _ref2$act === void 0 ? function (f) {\n    return f();\n  } : _ref2$act;\n\n  if (Array.isArray(customOrderingOrConstraints)) {\n    return buildSchedulerFor(act, customOrderingOrConstraints);\n  }\n\n  return function (_strs) {\n    for (var _len = arguments.length, ordering = new Array(_len > 1 ? _len - 1 : 0), _key = 1; _key < _len; _key++) {\n      ordering[_key - 1] = arguments[_key];\n    }\n\n    return buildSchedulerFor(act, ordering);\n  };\n}\n\nexport { schedulerFor };","map":null,"metadata":{},"sourceType":"module"}