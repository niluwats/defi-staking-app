{"ast":null,"code":"import _classCallCheck from \"D:\\\\truff\\\\defi-staking-app-starter\\\\defi-staking-app-starter\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"D:\\\\truff\\\\defi-staking-app-starter\\\\defi-staking-app-starter\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/createClass\";\nimport _possibleConstructorReturn from \"D:\\\\truff\\\\defi-staking-app-starter\\\\defi-staking-app-starter\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/possibleConstructorReturn\";\nimport _getPrototypeOf from \"D:\\\\truff\\\\defi-staking-app-starter\\\\defi-staking-app-starter\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/getPrototypeOf\";\nimport _inherits from \"D:\\\\truff\\\\defi-staking-app-starter\\\\defi-staking-app-starter\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/inherits\";\nimport { Stream } from '../../stream/Stream.js';\nimport { NextArbitrary } from '../../check/arbitrary/definition/NextArbitrary.js';\nimport { NextValue } from '../../check/arbitrary/definition/NextValue.js';\nimport { cloneMethod, hasCloneMethod } from '../../check/symbols.js';\nexport var ConstantArbitrary = /*#__PURE__*/function (_NextArbitrary) {\n  _inherits(ConstantArbitrary, _NextArbitrary);\n\n  function ConstantArbitrary(values) {\n    var _this;\n\n    _classCallCheck(this, ConstantArbitrary);\n\n    _this = _possibleConstructorReturn(this, _getPrototypeOf(ConstantArbitrary).call(this));\n    _this.values = values;\n    return _this;\n  }\n\n  _createClass(ConstantArbitrary, [{\n    key: \"generate\",\n    value: function generate(mrng, _biasFactor) {\n      var idx = this.values.length === 1 ? 0 : mrng.nextInt(0, this.values.length - 1);\n      var value = this.values[idx];\n\n      if (!hasCloneMethod(value)) {\n        return new NextValue(value, idx);\n      }\n\n      return new NextValue(value, idx, function () {\n        return value[cloneMethod]();\n      });\n    }\n  }, {\n    key: \"canShrinkWithoutContext\",\n    value: function canShrinkWithoutContext(value) {\n      for (var idx = 0; idx !== this.values.length; ++idx) {\n        if (Object.is(this.values[idx], value)) {\n          return true;\n        }\n      }\n\n      return false;\n    }\n  }, {\n    key: \"shrink\",\n    value: function shrink(value, context) {\n      if (context === 0 || Object.is(value, this.values[0])) {\n        return Stream.nil();\n      }\n\n      return Stream.of(new NextValue(this.values[0], 0));\n    }\n  }]);\n\n  return ConstantArbitrary;\n}(NextArbitrary);","map":null,"metadata":{},"sourceType":"module"}