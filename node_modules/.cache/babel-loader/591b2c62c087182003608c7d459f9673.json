{"ast":null,"code":"\"use strict\";\n\nvar _classCallCheck = require(\"D:\\\\truff\\\\defi-staking-app-starter\\\\defi-staking-app-starter\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/classCallCheck\");\n\nvar _possibleConstructorReturn = require(\"D:\\\\truff\\\\defi-staking-app-starter\\\\defi-staking-app-starter\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/possibleConstructorReturn\");\n\nvar _getPrototypeOf = require(\"D:\\\\truff\\\\defi-staking-app-starter\\\\defi-staking-app-starter\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/getPrototypeOf\");\n\nvar _inherits = require(\"D:\\\\truff\\\\defi-staking-app-starter\\\\defi-staking-app-starter\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/inherits\");\n\nvar __importDefault = this && this.__importDefault || function (mod) {\n  return mod && mod.__esModule ? mod : {\n    \"default\": mod\n  };\n};\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.CompileError = void 0;\n\nvar colors_1 = __importDefault(require(\"colors\"));\n\nvar error_1 = __importDefault(require(\"@truffle/error\"));\n\nvar CompileError = /*#__PURE__*/function (_error_1$default) {\n  _inherits(CompileError, _error_1$default);\n\n  function CompileError(message) {\n    var _this;\n\n    _classCallCheck(this, CompileError);\n\n    // Note we trim() because solc likes to add extra whitespace.\n    var fancy_message = message.trim() + \"\\n\\n\" + colors_1.default.red(\"Compilation failed. See above.\");\n    var normal_message = message.trim();\n    _this = _possibleConstructorReturn(this, _getPrototypeOf(CompileError).call(this, normal_message));\n    _this.message = fancy_message; //?? I don't understand this, I just found it here\n\n    return _this;\n  }\n\n  return CompileError;\n}(error_1.default);\n\nexports.CompileError = CompileError;","map":null,"metadata":{},"sourceType":"script"}