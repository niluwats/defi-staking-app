{"ast":null,"code":"import _regeneratorRuntime from \"D:\\\\truff\\\\defi-staking-app-starter\\\\defi-staking-app-starter\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/regenerator\";\nimport _asyncToGenerator from \"D:\\\\truff\\\\defi-staking-app-starter\\\\defi-staking-app-starter\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/asyncToGenerator\";\n\n// const DecentralBank = artif  require(\"DecentralBank\");\n//var contract = require(\"contracts\");\nvar contractj = require(\"../truffle_abis/DecentralBank.json\");\n\nfunction issueRewards(_x) {\n  return _issueRewards.apply(this, arguments);\n}\n\nfunction _issueRewards() {\n  _issueRewards = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime.mark(function _callee(callback) {\n    return _regeneratorRuntime.wrap(function _callee$(_context) {\n      while (1) {\n        switch (_context.prev = _context.next) {\n          case 0:\n            // let decentralBank =  contractj.deployed();\n            // await decentralBank.issueTokens();\n            contractj[\"DecentralBank\"].deployed().then(function (value) {\n              value.issueTokens();\n              console.log(\"Tokens have been issued successfully\");\n              callback();\n            });\n\n          case 1:\n          case \"end\":\n            return _context.stop();\n        }\n      }\n    }, _callee);\n  }));\n  return _issueRewards.apply(this, arguments);\n}\n\nexport default issueRewards; // const DecentralBank = artifacts.require(\"DecentralBank\");\n// module.exports = async function issueRewards(callback) {\n//   let decentralBank = await DecentralBank.deployed();\n//   await decentralBank.issueTokens();\n//   console.log(\"Tokens have been issued successfully\");\n//   callback();\n// };","map":{"version":3,"sources":["D:/truff/defi-staking-app-starter/defi-staking-app-starter/src/scripts/issue-tokens.js"],"names":["contractj","require","issueRewards","callback","deployed","then","value","issueTokens","console","log"],"mappings":";;;AAAA;AACA;AACA,IAAIA,SAAS,GAAGC,OAAO,CAAC,oCAAD,CAAvB;;SAEeC,Y;;;;;2EAAf,iBAA4BC,QAA5B;AAAA;AAAA;AAAA;AAAA;AACE;AACA;AACAH,YAAAA,SAAS,CAAC,eAAD,CAAT,CAA2BI,QAA3B,GAAsCC,IAAtC,CAA2C,UAACC,KAAD,EAAW;AACpDA,cAAAA,KAAK,CAACC,WAAN;AACAC,cAAAA,OAAO,CAACC,GAAR,CAAY,sCAAZ;AACAN,cAAAA,QAAQ;AACT,aAJD;;AAHF;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,G;;;;AASA,eAAeD,YAAf,C,CAEA;AAEA;AACA;AACA;AACA;AACA;AACA","sourcesContent":["// const DecentralBank = artif  require(\"DecentralBank\");\r\n//var contract = require(\"contracts\");\r\nvar contractj = require(\"../truffle_abis/DecentralBank.json\");\r\n\r\nasync function issueRewards(callback) {\r\n  // let decentralBank =  contractj.deployed();\r\n  // await decentralBank.issueTokens();\r\n  contractj[\"DecentralBank\"].deployed().then((value) => {\r\n    value.issueTokens();\r\n    console.log(\"Tokens have been issued successfully\");\r\n    callback();\r\n  });\r\n}\r\nexport default issueRewards;\r\n\r\n// const DecentralBank = artifacts.require(\"DecentralBank\");\r\n\r\n// module.exports = async function issueRewards(callback) {\r\n//   let decentralBank = await DecentralBank.deployed();\r\n//   await decentralBank.issueTokens();\r\n//   console.log(\"Tokens have been issued successfully\");\r\n//   callback();\r\n// };\r\n"]},"metadata":{},"sourceType":"module"}