{"ast":null,"code":"import { convertFromNext, convertToNext } from '../../../check/arbitrary/definition/Converters.js';\nimport { option } from '../../option.js';\nimport { tuple } from '../../tuple.js';\nimport { extractEnumerableKeys } from '../helpers/EnumerableKeysExtractor.js';\nimport { buildValuesAndSeparateKeysToObjectMapper, buildValuesAndSeparateKeysToObjectUnmapper } from '../mappers/ValuesAndSeparateKeysToObject.js';\nvar noKeyValue = Symbol('no-key');\nexport function buildPartialRecordArbitrary(recordModel, requiredKeys) {\n  var keys = extractEnumerableKeys(recordModel);\n  var arbs = [];\n\n  for (var index = 0; index !== keys.length; ++index) {\n    var k = keys[index];\n    var requiredArbitrary = recordModel[k];\n    if (requiredKeys === undefined || requiredKeys.indexOf(k) !== -1) arbs.push(requiredArbitrary);else arbs.push(option(requiredArbitrary, {\n      nil: noKeyValue\n    }));\n  }\n\n  return convertFromNext(convertToNext(tuple.apply(void 0, arbs)).map(buildValuesAndSeparateKeysToObjectMapper(keys, noKeyValue), buildValuesAndSeparateKeysToObjectUnmapper(keys, noKeyValue)));\n}","map":null,"metadata":{},"sourceType":"module"}