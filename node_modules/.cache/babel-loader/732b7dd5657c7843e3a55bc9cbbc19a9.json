{"ast":null,"code":"import _slicedToArray from \"D:\\\\truff\\\\defi-staking-app-starter\\\\defi-staking-app-starter\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/slicedToArray\";\nimport _assertThisInitialized from \"D:\\\\truff\\\\defi-staking-app-starter\\\\defi-staking-app-starter\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/assertThisInitialized\";\nimport _possibleConstructorReturn from \"D:\\\\truff\\\\defi-staking-app-starter\\\\defi-staking-app-starter\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/possibleConstructorReturn\";\nimport _getPrototypeOf from \"D:\\\\truff\\\\defi-staking-app-starter\\\\defi-staking-app-starter\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/getPrototypeOf\";\nimport _inherits from \"D:\\\\truff\\\\defi-staking-app-starter\\\\defi-staking-app-starter\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/inherits\";\nimport _classCallCheck from \"D:\\\\truff\\\\defi-staking-app-starter\\\\defi-staking-app-starter\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"D:\\\\truff\\\\defi-staking-app-starter\\\\defi-staking-app-starter\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/createClass\";\nimport { Stream } from '../../../stream/Stream.js';\nimport { cloneMethod, hasCloneMethod } from '../../symbols.js';\nimport { NextValue } from './NextValue.js';\nexport var NextArbitrary = /*#__PURE__*/function () {\n  function NextArbitrary() {\n    _classCallCheck(this, NextArbitrary);\n  }\n\n  _createClass(NextArbitrary, [{\n    key: \"filter\",\n    value: function filter(refinement) {\n      return new FilterArbitrary(this, refinement);\n    }\n  }, {\n    key: \"map\",\n    value: function map(mapper, unmapper) {\n      return new MapArbitrary(this, mapper, unmapper);\n    }\n  }, {\n    key: \"chain\",\n    value: function chain(chainer) {\n      return new ChainArbitrary(this, chainer);\n    }\n  }, {\n    key: \"noShrink\",\n    value: function noShrink() {\n      return new NoShrinkArbitrary(this);\n    }\n  }, {\n    key: \"noBias\",\n    value: function noBias() {\n      return new NoBiasArbitrary(this);\n    }\n  }]);\n\n  return NextArbitrary;\n}();\n\nvar ChainArbitrary = /*#__PURE__*/function (_NextArbitrary) {\n  _inherits(ChainArbitrary, _NextArbitrary);\n\n  function ChainArbitrary(arb, chainer) {\n    var _this;\n\n    _classCallCheck(this, ChainArbitrary);\n\n    _this = _possibleConstructorReturn(this, _getPrototypeOf(ChainArbitrary).call(this));\n    _this.arb = arb;\n    _this.chainer = chainer;\n    return _this;\n  }\n\n  _createClass(ChainArbitrary, [{\n    key: \"generate\",\n    value: function generate(mrng, biasFactor) {\n      var clonedMrng = mrng.clone();\n      var src = this.arb.generate(mrng, biasFactor);\n      return this.valueChainer(src, mrng, clonedMrng, biasFactor);\n    }\n  }, {\n    key: \"canShrinkWithoutContext\",\n    value: function canShrinkWithoutContext(value) {\n      return false;\n    }\n  }, {\n    key: \"shrink\",\n    value: function shrink(value, context) {\n      var _this2 = this;\n\n      if (this.isSafeContext(context)) {\n        return (!context.stoppedForOriginal ? this.arb.shrink(context.originalValue, context.originalContext).map(function (v) {\n          return _this2.valueChainer(v, context.clonedMrng.clone(), context.clonedMrng, context.originalBias);\n        }) : Stream.nil()).join(context.chainedArbitrary.shrink(value, context.chainedContext).map(function (dst) {\n          var newContext = Object.assign(Object.assign({}, context), {\n            chainedContext: dst.context,\n            stoppedForOriginal: true\n          });\n          return new NextValue(dst.value_, newContext);\n        }));\n      }\n\n      return Stream.nil();\n    }\n  }, {\n    key: \"valueChainer\",\n    value: function valueChainer(v, generateMrng, clonedMrng, biasFactor) {\n      var chainedArbitrary = this.chainer(v.value_);\n      var dst = chainedArbitrary.generate(generateMrng, biasFactor);\n      var context = {\n        originalBias: biasFactor,\n        originalValue: v.value_,\n        originalContext: v.context,\n        stoppedForOriginal: false,\n        chainedArbitrary: chainedArbitrary,\n        chainedContext: dst.context,\n        clonedMrng: clonedMrng\n      };\n      return new NextValue(dst.value_, context);\n    }\n  }, {\n    key: \"isSafeContext\",\n    value: function isSafeContext(context) {\n      return context != null && typeof context === 'object' && 'originalBias' in context && 'originalValue' in context && 'originalContext' in context && 'stoppedForOriginal' in context && 'chainedArbitrary' in context && 'chainedContext' in context && 'clonedMrng' in context;\n    }\n  }]);\n\n  return ChainArbitrary;\n}(NextArbitrary);\n\nvar MapArbitrary = /*#__PURE__*/function (_NextArbitrary2) {\n  _inherits(MapArbitrary, _NextArbitrary2);\n\n  function MapArbitrary(arb, mapper, unmapper) {\n    var _this3;\n\n    _classCallCheck(this, MapArbitrary);\n\n    _this3 = _possibleConstructorReturn(this, _getPrototypeOf(MapArbitrary).call(this));\n    _this3.arb = arb;\n    _this3.mapper = mapper;\n    _this3.unmapper = unmapper;\n    _this3.bindValueMapper = _this3.valueMapper.bind(_assertThisInitialized(_assertThisInitialized(_this3)));\n    return _this3;\n  }\n\n  _createClass(MapArbitrary, [{\n    key: \"generate\",\n    value: function generate(mrng, biasFactor) {\n      var g = this.arb.generate(mrng, biasFactor);\n      return this.valueMapper(g);\n    }\n  }, {\n    key: \"canShrinkWithoutContext\",\n    value: function canShrinkWithoutContext(value) {\n      if (this.unmapper !== undefined) {\n        try {\n          var unmapped = this.unmapper(value);\n          return this.arb.canShrinkWithoutContext(unmapped);\n        } catch (_err) {\n          return false;\n        }\n      }\n\n      return false;\n    }\n  }, {\n    key: \"shrink\",\n    value: function shrink(value, context) {\n      if (this.isSafeContext(context)) {\n        return this.arb.shrink(context.originalValue, context.originalContext).map(this.bindValueMapper);\n      }\n\n      if (this.unmapper !== undefined) {\n        var unmapped = this.unmapper(value);\n        return this.arb.shrink(unmapped, undefined).map(this.bindValueMapper);\n      }\n\n      return Stream.nil();\n    }\n  }, {\n    key: \"mapperWithCloneIfNeeded\",\n    value: function mapperWithCloneIfNeeded(v) {\n      var _this4 = this;\n\n      var sourceValue = v.value;\n      var mappedValue = this.mapper(sourceValue);\n\n      if (v.hasToBeCloned && (typeof mappedValue === 'object' && mappedValue !== null || typeof mappedValue === 'function') && Object.isExtensible(mappedValue) && !hasCloneMethod(mappedValue)) {\n        Object.defineProperty(mappedValue, cloneMethod, {\n          get: function get() {\n            return function () {\n              return _this4.mapperWithCloneIfNeeded(v)[0];\n            };\n          }\n        });\n      }\n\n      return [mappedValue, sourceValue];\n    }\n  }, {\n    key: \"valueMapper\",\n    value: function valueMapper(v) {\n      var _this$mapperWithClone = this.mapperWithCloneIfNeeded(v),\n          _this$mapperWithClone2 = _slicedToArray(_this$mapperWithClone, 2),\n          mappedValue = _this$mapperWithClone2[0],\n          sourceValue = _this$mapperWithClone2[1];\n\n      var context = {\n        originalValue: sourceValue,\n        originalContext: v.context\n      };\n      return new NextValue(mappedValue, context);\n    }\n  }, {\n    key: \"isSafeContext\",\n    value: function isSafeContext(context) {\n      return context != null && typeof context === 'object' && 'originalValue' in context && 'originalContext' in context;\n    }\n  }]);\n\n  return MapArbitrary;\n}(NextArbitrary);\n\nvar FilterArbitrary = /*#__PURE__*/function (_NextArbitrary3) {\n  _inherits(FilterArbitrary, _NextArbitrary3);\n\n  function FilterArbitrary(arb, refinement) {\n    var _this5;\n\n    _classCallCheck(this, FilterArbitrary);\n\n    _this5 = _possibleConstructorReturn(this, _getPrototypeOf(FilterArbitrary).call(this));\n    _this5.arb = arb;\n    _this5.refinement = refinement;\n    _this5.bindRefinementOnValue = _this5.refinementOnValue.bind(_assertThisInitialized(_assertThisInitialized(_this5)));\n    return _this5;\n  }\n\n  _createClass(FilterArbitrary, [{\n    key: \"generate\",\n    value: function generate(mrng, biasFactor) {\n      while (true) {\n        var g = this.arb.generate(mrng, biasFactor);\n\n        if (this.refinementOnValue(g)) {\n          return g;\n        }\n      }\n    }\n  }, {\n    key: \"canShrinkWithoutContext\",\n    value: function canShrinkWithoutContext(value) {\n      return this.arb.canShrinkWithoutContext(value) && this.refinement(value);\n    }\n  }, {\n    key: \"shrink\",\n    value: function shrink(value, context) {\n      return this.arb.shrink(value, context).filter(this.bindRefinementOnValue);\n    }\n  }, {\n    key: \"refinementOnValue\",\n    value: function refinementOnValue(v) {\n      return this.refinement(v.value);\n    }\n  }]);\n\n  return FilterArbitrary;\n}(NextArbitrary);\n\nvar NoShrinkArbitrary = /*#__PURE__*/function (_NextArbitrary4) {\n  _inherits(NoShrinkArbitrary, _NextArbitrary4);\n\n  function NoShrinkArbitrary(arb) {\n    var _this6;\n\n    _classCallCheck(this, NoShrinkArbitrary);\n\n    _this6 = _possibleConstructorReturn(this, _getPrototypeOf(NoShrinkArbitrary).call(this));\n    _this6.arb = arb;\n    return _this6;\n  }\n\n  _createClass(NoShrinkArbitrary, [{\n    key: \"generate\",\n    value: function generate(mrng, biasFactor) {\n      return this.arb.generate(mrng, biasFactor);\n    }\n  }, {\n    key: \"canShrinkWithoutContext\",\n    value: function canShrinkWithoutContext(value) {\n      return this.arb.canShrinkWithoutContext(value);\n    }\n  }, {\n    key: \"shrink\",\n    value: function shrink(_value, _context) {\n      return Stream.nil();\n    }\n  }, {\n    key: \"noShrink\",\n    value: function noShrink() {\n      return this;\n    }\n  }]);\n\n  return NoShrinkArbitrary;\n}(NextArbitrary);\n\nvar NoBiasArbitrary = /*#__PURE__*/function (_NextArbitrary5) {\n  _inherits(NoBiasArbitrary, _NextArbitrary5);\n\n  function NoBiasArbitrary(arb) {\n    var _this7;\n\n    _classCallCheck(this, NoBiasArbitrary);\n\n    _this7 = _possibleConstructorReturn(this, _getPrototypeOf(NoBiasArbitrary).call(this));\n    _this7.arb = arb;\n    return _this7;\n  }\n\n  _createClass(NoBiasArbitrary, [{\n    key: \"generate\",\n    value: function generate(mrng, _biasFactor) {\n      return this.arb.generate(mrng, undefined);\n    }\n  }, {\n    key: \"canShrinkWithoutContext\",\n    value: function canShrinkWithoutContext(value) {\n      return this.arb.canShrinkWithoutContext(value);\n    }\n  }, {\n    key: \"shrink\",\n    value: function shrink(value, context) {\n      return this.arb.shrink(value, context);\n    }\n  }, {\n    key: \"noBias\",\n    value: function noBias() {\n      return this;\n    }\n  }]);\n\n  return NoBiasArbitrary;\n}(NextArbitrary);\n\nexport function assertIsNextArbitrary(instance) {\n  if (typeof instance !== 'object' || instance === null || !('generate' in instance) || !('shrink' in instance) || 'shrinkableFor' in instance) {\n    throw new Error('Unexpected value received: not an instance of NextArbitrary');\n  }\n}","map":null,"metadata":{},"sourceType":"module"}