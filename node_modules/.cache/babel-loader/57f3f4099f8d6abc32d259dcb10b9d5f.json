{"ast":null,"code":"\"use strict\";\n\nvar _regeneratorRuntime = require(\"D:\\\\truff\\\\defi-staking-app-starter\\\\defi-staking-app-starter\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/regenerator\");\n\nvar _marked = /*#__PURE__*/_regeneratorRuntime.mark(decodeSpecial),\n    _marked2 = /*#__PURE__*/_regeneratorRuntime.mark(decodeMagic);\n\nvar __createBinding = this && this.__createBinding || (Object.create ? function (o, m, k, k2) {\n  if (k2 === undefined) k2 = k;\n  Object.defineProperty(o, k2, {\n    enumerable: true,\n    get: function get() {\n      return m[k];\n    }\n  });\n} : function (o, m, k, k2) {\n  if (k2 === undefined) k2 = k;\n  o[k2] = m[k];\n});\n\nvar __setModuleDefault = this && this.__setModuleDefault || (Object.create ? function (o, v) {\n  Object.defineProperty(o, \"default\", {\n    enumerable: true,\n    value: v\n  });\n} : function (o, v) {\n  o[\"default\"] = v;\n});\n\nvar __importStar = this && this.__importStar || function (mod) {\n  if (mod && mod.__esModule) return mod;\n  var result = {};\n  if (mod != null) for (var k in mod) {\n    if (k !== \"default\" && Object.prototype.hasOwnProperty.call(mod, k)) __createBinding(result, mod, k);\n  }\n\n  __setModuleDefault(result, mod);\n\n  return result;\n};\n\nvar __importDefault = this && this.__importDefault || function (mod) {\n  return mod && mod.__esModule ? mod : {\n    \"default\": mod\n  };\n};\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.decodeMagic = exports.decodeSpecial = void 0;\n\nvar debug_1 = __importDefault(require(\"debug\"));\n\nvar debug = debug_1.default(\"codec:special:decode\");\n\nvar Basic = __importStar(require(\"../../basic\"));\n\nvar Bytes = __importStar(require(\"../../bytes\"));\n\nvar Compiler = __importStar(require(\"../../compiler\"));\n\nvar Evm = __importStar(require(\"../../evm\"));\n\nfunction decodeSpecial(dataType, pointer, info) {\n  return _regeneratorRuntime.wrap(function decodeSpecial$(_context) {\n    while (1) {\n      switch (_context.prev = _context.next) {\n        case 0:\n          if (!(dataType.typeClass === \"magic\")) {\n            _context.next = 5;\n            break;\n          }\n\n          return _context.delegateYield(decodeMagic(dataType, pointer, info), \"t0\", 2);\n\n        case 2:\n          return _context.abrupt(\"return\", _context.t0);\n\n        case 5:\n          return _context.delegateYield(Basic.Decode.decodeBasic(dataType, pointer, info), \"t1\", 6);\n\n        case 6:\n          return _context.abrupt(\"return\", _context.t1);\n\n        case 7:\n        case \"end\":\n          return _context.stop();\n      }\n    }\n  }, _marked);\n}\n\nexports.decodeSpecial = decodeSpecial;\n\nfunction decodeMagic(dataType, pointer, info) {\n  var state, block, variables, _i, _variables, variable;\n\n  return _regeneratorRuntime.wrap(function decodeMagic$(_context2) {\n    while (1) {\n      switch (_context2.prev = _context2.next) {\n        case 0:\n          state = info.state;\n          _context2.t0 = pointer.special;\n          _context2.next = _context2.t0 === \"msg\" ? 4 : _context2.t0 === \"tx\" ? 15 : _context2.t0 === \"block\" ? 22 : 37;\n          break;\n\n        case 4:\n          _context2.t1 = dataType;\n          return _context2.delegateYield(Bytes.Decode.decodeBytes({\n            typeClass: \"bytes\",\n            kind: \"dynamic\",\n            location: \"calldata\"\n          }, {\n            location: \"calldata\",\n            start: 0,\n            length: state.calldata.length\n          }, info), \"t2\", 6);\n\n        case 6:\n          _context2.t3 = _context2.t2;\n          return _context2.delegateYield(Basic.Decode.decodeBasic({\n            typeClass: \"bytes\",\n            kind: \"static\",\n            length: Evm.Utils.SELECTOR_SIZE\n          }, {\n            location: \"calldata\",\n            start: 0,\n            length: Evm.Utils.SELECTOR_SIZE\n          }, info), \"t4\", 8);\n\n        case 8:\n          _context2.t5 = _context2.t4;\n          return _context2.delegateYield(Basic.Decode.decodeBasic(senderType(info.currentContext.compiler), {\n            location: \"special\",\n            special: \"sender\"\n          }, info), \"t6\", 10);\n\n        case 10:\n          _context2.t7 = _context2.t6;\n          return _context2.delegateYield(Basic.Decode.decodeBasic({\n            typeClass: \"uint\",\n            bits: 256\n          }, {\n            location: \"special\",\n            special: \"value\"\n          }, info), \"t8\", 12);\n\n        case 12:\n          _context2.t9 = _context2.t8;\n          _context2.t10 = {\n            data: _context2.t3,\n            sig: _context2.t5,\n            sender: _context2.t7,\n            value: _context2.t9\n          };\n          return _context2.abrupt(\"return\", {\n            type: _context2.t1,\n            kind: \"value\",\n            value: _context2.t10\n          });\n\n        case 15:\n          _context2.t11 = dataType;\n          return _context2.delegateYield(Basic.Decode.decodeBasic(senderType(info.currentContext.compiler), {\n            location: \"special\",\n            special: \"origin\"\n          }, info), \"t12\", 17);\n\n        case 17:\n          _context2.t13 = _context2.t12;\n          return _context2.delegateYield(Basic.Decode.decodeBasic({\n            typeClass: \"uint\",\n            bits: 256\n          }, {\n            location: \"special\",\n            special: \"gasprice\"\n          }, info), \"t14\", 19);\n\n        case 19:\n          _context2.t15 = _context2.t14;\n          _context2.t16 = {\n            origin: _context2.t13,\n            gasprice: _context2.t15\n          };\n          return _context2.abrupt(\"return\", {\n            type: _context2.t11,\n            kind: \"value\",\n            value: _context2.t16\n          });\n\n        case 22:\n          return _context2.delegateYield(Basic.Decode.decodeBasic(coinbaseType(info.currentContext.compiler), {\n            location: \"special\",\n            special: \"coinbase\"\n          }, info), \"t17\", 23);\n\n        case 23:\n          _context2.t18 = _context2.t17;\n          block = {\n            coinbase: _context2.t18\n          };\n          //the other ones are all uint's, so let's handle them all at once; due to\n          //the lack of generator arrow functions, we do it by mutating block\n          variables = [\"difficulty\", \"gaslimit\", \"number\", \"timestamp\"];\n\n          if (solidityVersionHasChainId(info.currentContext.compiler)) {\n            variables.push(\"chainid\");\n          }\n\n          if (solidityVersionHasBaseFee(info.currentContext.compiler)) {\n            variables.push(\"basefee\");\n          }\n\n          _i = 0, _variables = variables;\n\n        case 29:\n          if (!(_i < _variables.length)) {\n            _context2.next = 36;\n            break;\n          }\n\n          variable = _variables[_i];\n          return _context2.delegateYield(Basic.Decode.decodeBasic({\n            typeClass: \"uint\",\n            bits: 256\n          }, {\n            location: \"special\",\n            special: variable\n          }, info), \"t19\", 32);\n\n        case 32:\n          block[variable] = _context2.t19;\n\n        case 33:\n          _i++;\n          _context2.next = 29;\n          break;\n\n        case 36:\n          return _context2.abrupt(\"return\", {\n            type: dataType,\n            kind: \"value\",\n            value: block\n          });\n\n        case 37:\n        case \"end\":\n          return _context2.stop();\n      }\n    }\n  }, _marked2);\n}\n\nexports.decodeMagic = decodeMagic;\n\nfunction senderType(compiler) {\n  switch (Compiler.Utils.solidityFamily(compiler)) {\n    case \"unknown\":\n    case \"pre-0.5.0\":\n      return {\n        typeClass: \"address\",\n        kind: \"general\"\n      };\n\n    case \"0.5.x\":\n      return {\n        typeClass: \"address\",\n        kind: \"specific\",\n        payable: true\n      };\n\n    default:\n      return {\n        typeClass: \"address\",\n        kind: \"specific\",\n        payable: false\n      };\n  }\n}\n\nfunction coinbaseType(compiler) {\n  switch (Compiler.Utils.solidityFamily(compiler)) {\n    case \"unknown\":\n    case \"pre-0.5.0\":\n      return {\n        typeClass: \"address\",\n        kind: \"general\"\n      };\n\n    case \"0.5.x\":\n    case \"0.8.x\":\n    case \"0.8.7+\":\n    case \"0.8.9+\":\n      return {\n        typeClass: \"address\",\n        kind: \"specific\",\n        payable: true\n      };\n  }\n}\n\nfunction solidityVersionHasChainId(compiler) {\n  switch (Compiler.Utils.solidityFamily(compiler)) {\n    case \"unknown\":\n    case \"pre-0.5.0\":\n    case \"0.5.x\":\n      return false;\n\n    default:\n      return true;\n  }\n}\n\nfunction solidityVersionHasBaseFee(compiler) {\n  switch (Compiler.Utils.solidityFamily(compiler)) {\n    case \"unknown\":\n    case \"pre-0.5.0\":\n    case \"0.5.x\":\n    case \"0.8.x\":\n      return false;\n\n    default:\n      return true;\n  }\n}","map":null,"metadata":{},"sourceType":"script"}