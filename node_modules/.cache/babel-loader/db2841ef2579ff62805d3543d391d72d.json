{"ast":null,"code":"import { floatNext } from './_next/floatNext.js';\nimport { integer } from './integer.js';\n\nfunction next(n) {\n  return integer(0, (1 << n) - 1);\n}\n\nvar floatInternal = function floatInternal() {\n  return next(24).map(function (v) {\n    return v / (1 << 24);\n  });\n};\n\nfunction float() {\n  for (var _len = arguments.length, args = new Array(_len), _key = 0; _key < _len; _key++) {\n    args[_key] = arguments[_key];\n  }\n\n  if (typeof args[0] === 'object') {\n    if (args[0].next) {\n      return floatNext(args[0]);\n    }\n\n    var min = args[0].min !== undefined ? args[0].min : 0;\n    var max = args[0].max !== undefined ? args[0].max : 1;\n    return floatInternal().map(function (v) {\n      return min + v * (max - min);\n    }).filter(function (g) {\n      return g !== max || g === min;\n    });\n  } else {\n    var a = args[0];\n    var b = args[1];\n    if (a === undefined) return floatInternal();\n    if (b === undefined) return floatInternal().map(function (v) {\n      return v * a;\n    }).filter(function (g) {\n      return g !== a || g === 0;\n    });\n    return floatInternal().map(function (v) {\n      return a + v * (b - a);\n    }).filter(function (g) {\n      return g !== b || g === a;\n    });\n  }\n}\n\nexport { float };","map":null,"metadata":{},"sourceType":"module"}